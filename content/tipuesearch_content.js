var tipuesearch = {"pages": [{'title': 'group-cd2020bg1', 'text': 'cd2020-bg1分組網站: https://s40723246.github.io/cd2020-bg1/content/index.html \n member: \n \n 吳沛汶Repository:\xa0 40723201 \xa0 | Site: \xa0 40723201 王冠驊Repository: \xa0 40723206 \xa0 | Site: \xa0 40723206 \xa0(小組長) 杜玗宸Repository: \xa0 40723213 \xa0 | Site: \xa0 40723213 林子欽Repository: \xa0 40723216 \xa0 | Site: \xa0 40723216 洪維成Repository: \xa0 40723223 \xa0 | Site: \xa0 40723223 高立倫Repository: \xa0 40723226 \xa0 | Site: \xa0 40723226 陳羽泓Repository: \xa0 40723229 \xa0 | Site: \xa0 40723229 \xa0 (小組長) 陳冠樺Repository: \xa0 40723230 \xa0 | Site: \xa0 40723230 葉承叡Repository: \xa0 40723241 \xa0 | Site: \xa0 40723241 趙子得Repository: \xa0 40723242 \xa0 | Site: \xa0 40723242 \xa0(小組長) 鄭竣元Repository: \xa0 40723246 \xa0 | Site: \xa0 40723246 \xa0 (group leader) Repository: \xa0 40732319 \xa0 | Site: \xa0 40732319 \n \n \n 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'group-cd2020bg1.html'}, {'title': '期末報告', 'text': '\n', 'tags': '', 'url': '期末報告.html'}, {'title': 'weeks', 'text': '', 'tags': '', 'url': 'weeks.html'}, {'title': 'week1~5', 'text': 'week1 \n 創建github倉儲、設定新版可攜式套件 \n 1.創建課程倉儲並git clone到近端。 \n 2.用git config 設定name、email及proxy。 \n 3.用新指令 git submodule add 載下模組。 \n 4.輸入 python -m pip install flask cors 指令裝 pip 套件。 \n 5.練習開啟近端及遠端並更改網頁名稱。 \n \n 第一次線上會議 \n 一.成員簽到 \n 40723201 (簽) 已建立完成網站 \xa0 40723206 (簽) 已建立完成網站 \xa0 小組長 \xa0 40723213 (簽) 已建立完成網站 \xa0 40723216 (簽) 已建立完成網站 \xa0 40723223 (簽) \xa0 40723226 (簽) 已建立完成網站 \xa0 40723229 (簽) 已建立完成網站 \xa0 小組長 \xa0 40723230 (簽) 已建立完成網站 \xa0 40723241 (簽) 已建立完成網站 \xa0 40723242 (簽) 已建立完成網站 \xa0 小組長 \xa0 40723246 ( group leader ) (簽) 已建立完成網站 \xa0 40732319 (簽) \n 二.討論日後分工 \n 1.由(40723201、40723206、40723230、40723241、40723246)，已經建立 好網站及編輯完網站的同學，前去協助還沒完成的同學 \xa0 2.40723213、40723242 督處尚未完成的同學，互相協助來完成第一周課程 \xa0 3.40723223、40723223 負責處理小組會議 \xa0 4.40723246 負責製作小組會議 \xa0 5.40723241、40723216 提醒小組問題及完成分組作業 \n 三.有問題的同學提出問題\xa0 \n \n 組員會議中提醒的事項 \xa0 1.網站的格式及編譯 \xa0 2.其餘的工作分配 \xa0 3.PDF 放倉儲的位置及如何放置 \n 分工表 \n \n 直播meeting1影片: \n 網址: https://youtu.be/nKNgEypBalo \n \n \n week2 \n 將可攜系統python 3.7.3更新至python 3.8.2 \n 1.先去GOOGLE找 Python \n 2.下載 Windows x86-64 executable installer \xa0載完點並 不要勾選pip選項，接著按下next選取放置資料夾 \n 3.在隨身系統下新增放置資料夾cd2020，並在cd2020下新建資料夾data，data<py382< wscite432<portablegit \n 4.下載SciTE系統 \xa0 full 64-bit download ，下載完後解壓縮至data下的wscite432 \n 5.在cd2020下建立新的start.bat及stop.bat \n start.bat: \n @echo off\nset Disk=y\nsubst %Disk%: "data"\n \n%Disk%:\n \nset HomePath=%Disk%:\\home_mdecourse\nset HomeDrive=%Disk%:\\home_mdecourse\nset Home=%Disk%:\\home_mdecourse\nset USERPROFILE=%Disk%:\\home_mdecourse\n \nREM 將系統 Python 程式的 io 設為 utf-8\nset PYTHONIOENCODING="utf-8"\n \nset PYTHONPATH=%Disk%:\\py373\\DLLs;%Disk%:\\py373\\Lib;%Disk%:\\py373\\Lib\\site-packages;\nset PYTHONHOME=%Disk%:\\py373\n \nset GIT_HOME=%Disk%:\\portablegit\\bin\\\nset GIT_SSH=%Disk%:\\putty\\plink.exe\n \nset path_python=%Disk%:\\py373;%Disk%:\\py373\\Scripts;\nset path_msys2=%Disk%:\\msys64\\mingw64\\bin;\nREM coreutils is for compiling fossil scm\nset path_coreutils=%Disk%:\\coreutils-5.3.0\\bin;%Disk%:\\depends22_x64;\nset path_tcc=%Disk%:\\tcc;\nset path_cmake=%Disk%:\\cmake-3.10.1-win64-x64\\bin;\nset path_nodejs=Disk%:\\nodejs;%Disk%:\\nodejs\\appdata\\roaming\\npm;\nset path_git=%Disk%:\\portablegit\\bin;\nset path_xming=%Disk%:\\Xming;\nset path_latex=%%Disk%:\\Pandoc;%Disk%:\\TinyTeX\\bin\\win32;\n \npath=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%;\n \nstart /MIN %Disk%:\\wscite415\\wscite\\SciTE.exe\nstart /MIN %Disk%:\\wscite415\\wscite\\SciTE.exe\n \nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\n \n \nExit \n stop.bat: \n @echo off\nset Disk=y\npath=%PATH%;\n  \ntaskkill /IM python.exe /F\ntaskkill /IM pythonw.exe /F\ntaskkill /IM scite.exe /F\n  \nREM 終止虛擬硬碟與目錄的對應\nsubst %Disk%: /D\nREM 關閉 cmd 指令視窗\ntaskkill /IM cmd.exe /F\n  \nEXIT \n 8.下 載MSYS2\xa0 msys2-x86_64-20190524.exe \xa0至data 9.下載 PortableGit\xa0 64-bit Git for Windows Portable \xa0至 portablegit 10 .裝入 pip ，另存新檔到data 11.測試 將python3.8.2版本，將缺少的模組下載回來 \n python get-pip.py\n \n pip install flask bs4 lxml pelican markdown flask_cors leo\n \n 第二次線上會議 \n 1.成員簽到等候  2.分工作業進度回報及問題討論  3.有問題的同學提出問題    成員名單  1.40723201 (簽) 已建立完成網站  2.40723206 (簽) 已建立完成網站 小組長  3.40723213 (簽) 已建立完成網站  4.40723216 (簽) 已建立完成網站  5.40723223 (簽) 已建立完成網站  6.40723226 (簽) 已建立完成網站  7.40723229 (簽) 已建立完成網站 小組長  8.40723230 () 已建立完成網站  9.40723241 (簽) 已建立完成網站  10.40723242 (簽) 已建立完成網站 小組長  11.40723246 (group leader) (簽) 已建立完成網站  12.40732319 ()    分工作業進度回報及問題討論    ※作業一(4 輪車)  *根據主題 0 和主題 1 的素材，您能否具體描述機械設計團隊，為了完成作業四輪機 器人需要做些什麼?     \n ※作業二(設計協同)  * 根據主題 Topic 0 們可以創建英語英語詞彙收集服務嗎？ *根據主題 Topic 1 我們可以構建在線工具來促進這些過程嗎？ \n *Topic 0: From Digital to Industrial + Engineering Product Design  Collaboration ( 從數字到工業 + 工程產品設計協作 )  設計資料: DigitalProductCollaboration.pdf 、 IndustrialAndEngineeringProductDesignCollaboration.pdf  Can we create an english-english vocabulary collection service?  *Topic 1: Mechanical Design Process ( 機械設計過程 )  Login to your gm email account and download  MechanicalDesignProcess.pdf . 以上由 40723206 分配工作 \n 下列為分工表格 \n \n 本週重要提醒及任務    1.各組員下載 OBS，以往後會議討論用 \n 2. 作業二必須在 4/23 前完成，並上傳 pdf 檔到個人倉儲的download上。會做的可以問會的同學或在 gitter 上發問。 \n 3. 請依每個人的作業二 pdf 檔、網站內容，進行互評。 \n 直播meeting2影片: \n 網址: https://youtu.be/OxkKfuyFb0I \n \n week3 \n \n 上週我被分派為小組長，我帶領的組員是40723213、40723216、40723241，我們被分派做的部分是 研究並探討四輪車的模擬 ，因為我是小組長所以我分配成 BubbleRob tutorial 、 Line following BubbleRob tutorial 、 External controller  tutorial 、 Simulation \xa0 四個部分，每一個人分別研究一部份。 \n Four Wheel Car- Analysis and integration \n BubbleRob tutorial :\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 此部分由40723206提供 \n 在此教程中會讓我們設計簡單的BubbleRob機器人並進行一些基礎的模擬操作，而大二上我們其實就有實際的以v-rep操作過這個教程，在這個教程中的說明包括了如何建造模型機器人主體、車輪及後方支撐滑塊，還有如何建造及設置障礙物，以及設定好的距離傳感器後使其去感測並避開我們所設置的障礙物，而最重要的要點是如何去設計指令讓傳動器依照我們所想要的方式去做動，且當距離感測器偵測到障礙物時才能使機器人迅速閃避障礙物，另外還有視覺辨識器，使機器人在移動時，讓我們能夠觀測到機器人行徑方向之路況。 \n \n week4 \n week5 \n', 'tags': '', 'url': 'week1~5.html'}, {'title': 'week6~9', 'text': 'week6 \n MechanicalDesignProcess \n 第 3 章   結構注意事項 \n 在前面的章節中，我們定義了成功的設計是什麼，然後繼續確定將要在設計中放置的對象的位置。現在，我們將討論設計的結構性考慮。我覺得我們必須建立在 “ 堅實的基礎 ” 上，以便設計的其餘部分可以以此為基礎。電子外殼（本身）的結構必須堅固到足以在客戶（用戶）使用產品的各種環境中工作。因此，讓我們從討論提供產品的主要考慮因素入手。這個 “ 堅實的基礎 ” 。本章將著重於： \n \n 利用材料概念的優勢提出結構解決方案 \n 定義用於考慮電子外殼結構設計的通用過程 \n 查看一些具體說明一般概念的示例我們將在本章中最後一節標題為 “ 獎金部分 ” 。最後一部分旨在給我們在材料強度方面的問題增加一些複雜性，並展示除強度以外的其他考慮因素對於我們的設計選擇如何重要。 \n \n 3.1 簡介：材料的強度 \xa0 \n \xa0\xa0\xa0 結構注意事項對於設計的整體成功至關重要。 \xa0 讀者無需獲得機械工程學位或成為材料強度方面的專家即可從本章中受益，設計師對材料的基本強度了解得越多，外殼設計就越好。 \xa0 僅解決問題是不夠的，需要盡可能的以最具成本效益的方式解決問題 \xa0 設計適用於電子外殼的結構的分為 四個 基本方法可基本方法： \xa0 \n 1. 查看已經存在的類似產品，並使用已設計的解決方案作為手頭設計的快速起點。這種方法的優點是速度快，但是缺點是您的設計可能會因為缺乏創造力而無法解決特定產品應解決的獨特問題。 \n 2. 快速的 “ 信封背面 ” 設計。這種方法在簡化的結構元素上使用了一些基本的設計方程式。我們將在本章稍後探討這些設計方法的一些示例，以及一些示例問題。 \n 3. 更複雜的分析。在 Sect 中對此進行了更多探討。 \n 4.– 當然，過度設計 並不是所有設計的正確答案。在 競爭激烈的 產品市場中，客戶主要根據價格做出購買決定，過度設計可能會導致產品成本增加（或者肯定會增加重量和尺寸）。結構上的過度設計基本上是從一個非常有可能成功通過結構測試的設計開始的，也就是說，要在客戶使用環境中免受衝擊和振動的影響就可以通過。 \xa0 \n 過度設計原因有以下幾個： \n \n 設計能夠承受所一些力的未知的高精度。這將在 Sect 中進一步探討。 \n 設計中只有一個 “ 安全係數 ” 大於 1.0 。安全係數等於 1.0 意味著您的設計僅符合設計標準。在 Sect 中討論了增加安全係數的設計。 \n \n 3.2 結構的設計過程 \xa0 \n 我想給讀者一個通用的過程，以設計滿足設計要求的電子外殼（或外殼中的 單個零件 ）。通過完成這六個步驟，設計人員應該準備好提出可以使用的材料和橫截面。我將分別細分這六個步驟。\xa0 \n \xa0 \xa0 3.2.1 相似設計 \xa0 \n 業內其他設計如何處理相似情況？其他設計可能來自您自己公司內部的示例（過去的產品），也可能來自您自己公司外部的競爭產品。 \xa0 \n \xa0 \xa0 3.2.2 分力 \n 確定物體上的力（靜態和動態）–振幅和方向這些力量。通常不考慮零件的自重電子外殼可承受靜態力，但可以考慮使用動態力。在本文中，我指的是“對象”，“零件”和“成員”，但它們都應被視為完全是同一個人。 \n \xa0 \xa0 3.2.3 現有的最終條件 \xa0 \n 確定對象的 “ 最終條件 ” ，即其移動自由度以及如何支撐構件。常見的最終條件是 “ 固定 ” （不允許移動）或 “ 自由 ” （允許旋轉）。最終條件會影響確定負載將產生的應力大小。 \xa0 \n \xa0 \xa0 3.2.4 建議材料和橫截面 \xa0 \n 確定支撐這些材料所需的材料和橫截面組合力，請牢記“力量”屬於材料，力會在這些材料中產生應力。所有材料都有最大應力極限，我們要么開始變形或完全破壞點。 \n 基本上，只有兩種最初選擇來設計更高的承重構件 \xa0 \n \n 更換材料，從而可以更改應力極限。因此，選擇具有較高應力極限的材料可以在該構件上施加更多的載荷。 \n 更改材料的橫截面特性，基本上是構件的第二面積矩以及可以從構件的 “ 中性軸 ” 集中的面積。或質心。增大面積將實質上增加成員承載更多載荷的能力。遠離會員的 “ 中性軸 ” 增加該面積也將有助於會員承擔更多的負載（這就是 “ 工字梁 ” 的原因， “ 工字梁 ” 的許多橫截面都遠離 “ 中性軸 ” ，是出色的承載構件）。 \n \n \xa0 \xa0 \xa0 \xa0  3.2.4.2鋁解決方案 \xa0 \n 設計就是要提出一些合理的選擇，所以讓我們看一下鋁樑。 \n 我們可以選擇， b = 4 英寸， h = 2.5 英寸。我們可以看到最大應力為 23,100 psi 。這高於鋁的最大屈服應力，因此不會造成結構變形。在我們的設計中令人非常滿意。但是要記住光束的高度是我們對慣性矩的計算 b = 2.5 英寸和 h = 4 英寸？這將是與鋁樑的先前示例。現在，最大壓力將是 14,400 psi ，完全在該鋁的最大 22,000 psi 之內。因此，“旋轉 - 相同的橫截面，其中較厚的方向是在載荷方向上力，使這種材料選擇和橫截面在結構上成功。讓我們看一下鋁樑的重量。  169 磅 / 英尺 3 ，光束會是 47 磅。相比之下，松木為 40 磅。 \n 總之，我們研究了兩種不同的材料（松木和鋁最小）可用於解決結構問題。我們可以跨領域開發解決結構問題的每種材料的截面積。 \n 在設計中，變形通常與強度同等重要。負載構件可能具有足夠的強度以承受特定的載荷，但是它可能偏轉超出工程材料彈性的不可接受的量。撓度（以及材料的彈性模量 E ）也存在問題正在考慮中的內容將在本章中的一些示例中顯示。上述選擇的經濟性（更換物料或更換物料交叉部分）給 EPE 設計師帶來了一個有趣的問題。的許多組合材料和橫截面積可以使用，但必鬚根據實際情況進行選擇項目的總體目標。除了運作外，它還必須滿足項目的成本目標，可製造性，風險，重量，上市時間等。這些選擇將是進一步的在 ” 第 4 章 - 可能有替代解決方案需要進行審查 ” 開始進行調查，測試和製作原型。最大的資產之一設計師可以帶入設計中，以便快速找到要選擇的邏輯在可行的材料 / 橫截面選擇候選材料中做出解決眼前的問題。 \n   \xa0 \xa0 3.2.5 合併功能 \n 可以將正在設計的零件與裝配中的另一個零件組合嗎在這部分附近嗎？基本上，兩個單獨的部分可以合併成一個部分？查看被合併部分的“另類思維”方面是實際上希望從一個（設想的）單個零件創建兩個單獨的零件。這可能從而降低了總體成本，降低了組合設計的解決方案。主要選擇之一將是確定如何在生產中製造該解決方案。例如，一些這裡涉及的選擇是： \n \n 該項目的工具預算是多少？該項目可以“負擔”開支嗎？鑄造，注模，擠壓或其他製造所需的資金可能正在考慮的充氣技術？是否有現有工具可以利用？必須確定找到“投資回收期”解決方案。例如，了解： \n \n 1. 加工費用 \n 2. 需要多少個零件（在產品“使用壽命”內） \n 3. 未加工零件將花費多少 \n 4. 工具零件將花費多少 \n \xa0 \xa0 3.2.6 確定所需的安全 \xa0 \n 係數此時必須複查 “ 安全係數 ” 的確定。也就是說，必須知道以下問題的答案： \xa0 \n \n 如果零件失效，是否有人受傷？生命，金錢和時間上無法預測的失敗的代價是什麼？ \n 該特定部分在產品整體功能中的重要性如何？如果這部分失敗，那麼整個產品是否會失敗？ \n 對力的了解程度如何？我們是否知道 “ 誤差線 ” ，即力會偏離假定的名義值多少？ \n 確定所選設計（材料或幾何形狀）的 “ 關鍵方面 ” ，以及如何在生產中指定，認證和檢查它們？做筆記以確保將執行這些步驟（認證 / 檢查）。確定設計各個階段所需的測試，以確保最終設計足以將其交付給生產中的客戶。 \n 將有一個優化的解決方案，通常可以通過分析設計的主要組成部分並確定設計中 “ 弱鏈接 ” 的位置來找到。這可以通過利用某些測試方法來發現，這些方法會通過超出環境限制的測試（例如高度加速的壽命測試， HALT ）而導致失敗。通過首先確定可能發生故障的位置，然後通過測試設計原型，可以生成數據來確定某些段是否接近其設計極限。 \n \n \xa0\xa0\xa0  如果設計過程中的上述六個步驟中的任何一個都沒有一定程度的已知答案，則設計人員將面臨： \xa0 \n \n 進行進一步查詢以獲取更好的信息。 \n 進行設計。設計人員在設計過程的一開始就幾乎不了解零件的所有作用力和相互關係。當然，設計人員可以列出所做的假設以及必不可少的其他信息。當然，可以設計零件，對零件進行原型設計並在需要使用的條件下進行測試。解決 “ 在不知道所有信息的情況下進行設計 ” 這一難題的幾種方法可以被採取讓我們研究一個示例，其中： \n \n 設計 1 的重量為目標重量的 110 ％，但在結構上成功的可能性為 95 ％。設計 2 是目標重量的 100 ％，但 75 ％ \xa0 在結構上成功的機會。因此，設計 1 超出了目標重量的 10 ％，但是無法達到通過設計工作的設計目標的風險要低得多結構的觀點。因此，“折衷”是優化設計所需的時間。當然，產品必須從結構的角度進行工作。很難確定在程序開始時就在設計中“預留空間”。繼續前進在不知道所有信息的情況下進行設計的價值在於“基本設計”可以測試。希望可以迅速修改“基本設計”框架，使程序可以在獲得其餘信息時繼續運行。我們可以通過“過度設計”零件來快速前進，或者投入更多時間來“勉強”滿足所有要求。仔細研究了這兩個路徑以下更多解答： \n A. “過度設計”零件–這種方法可能保證零件會在測試中的結構功能。這裡的想法是迭代回到測試顯示出節省材料和減輕重量的地方，從而減少了保守的設計適當。這種方法至少使設計會議的機會最大化在項目測試階段的早期就對結構功能進行了要求等等。但是，設計的重量發生了變化，使這些零件更接近“  mar- 最終成功”將需要時間（和金錢）來重新測試設計以驗證更改。大多數項目在迭代方法上的時間有限獲得“完全”設計的零件。 \n B. 設計零件時使用“僅少量”會議會花費更多時間兼顧重量和強度要求。因此，這種策略與過度設計（以上），因為零件的設計有可能（只是勉強）工作。例如，如果空間和重量減少量最大產品要求列表，該設計在“基本”上可以接受結構強度因子，但具有更大的材料和重量節省，可能是需要什麼。這種方法試圖平衡“風險和回報”與應該徵得設計團隊的同意才能前進。有了這個設計可以達到材料和重量的目標。但是，這種設計的風險不大從結構上講，工作率從 5 ％上升到 25 ％。因此“  B ”設計路徑顯示不滿足產品結構強度要求的較高風險，但將滿足產品的重量要求。 \n C. 上述兩種方法的混合可能是合適的。也就是說，設計會比較保守，而設計的其他部分會更多有風險。這也許使“整體風險承受能力”成為整體風險的一部分。設計。經驗豐富的設計團隊將了解設計中的最佳位置“推翻接受度”。 \n 3.3 所需的分析 \xa0 \n 當然，有許多設計可以保證在電子包裝設計中進行最嚴格的分析。在任何競爭激烈的產品設計領域，將是使用給定技術進行最高生產力的公司，即將大程度地提高其成功機會。如果產品具有： \n \n 高產量。如果要生產成千上萬個特定單元，則每單位節省一美元可以帶來可觀的總節省。節省大量成本的分析會由於大量生產而帶來大量總體利潤。但是，如果只生產幾個單元，則節省的潛力就大大降低了，一旦設計被認為是可行的，在降低成本上的大量投資就不會帶來可觀的節省。 \n 由於要放置產品的環境，因此要求高度安全。例如運輸，公用事業，醫療或教育行業的產品。所有客戶都需要擁有安全操作的產品。 \n 對客戶至關重要的 “ 任務 ” 。這通常包括軍事，航天局或政府所需的產品。 \n \n 請注意，過分設計以致降低公司的盈利能力是沒有任何藉口的。設計師和工程師應該時刻警惕降低成本的可能性。零件的減少，可製造性的設計以及整體設計的優雅，導致了產品的領導地位。只有在設計的第一階段才能 最大 程度地降低成本。隨著設計甚至進入原型階段，為降低成本而重新設計的成本開始呈指數級增長。這方面的更多內容將在第一章中介紹。 \xa0 \n 另外，關於安全的注意事項也是適當的。在安全性很重要的任何領域，都不能為產品設計不足的藉口。當然，美國保險商實驗室（ UL ）和其他安全機構也會對電子設備進行安全考量認證。也就是說，安全機構將獲取產品（規格和工作單元），並對其進行審查和測試。大多數電子產品，當然是在全球範圍內銷售的產品，都必須通過嚴格的代理商批准認證。這方面的更多內容將在第一章中介紹。首要的設計考慮因素仍然是，並且將永遠是功能。即，零件必須 發揮作用 按預期。如果零件在負載下會失效，那麼它的外觀或生產的優雅程度都無關緊要。這是設計人員必須了解載荷的主要原因。 \xa0 \n \xa0\xa0\xa0  使用有限元分析（ FEA ）的現代分析軟件解決方案非常實用無處不在。在 Google 上進行的搜索顯示了一些入門資料，例如： \n A. 有限元分析，麻省理工學院的 David Roylance 。描述三個主體步驟為： \n \n 預處理，將要分析的零件模型（其中的幾何形狀劃分為多個離散的子區域或“元素”）進行連接在離散點稱為“節點” \n 分析，將預處理器準備的數據集用作輸入線性或非線性代數方程組，用於計算應力和位移 \n 後處理，以圖形方式顯示結果，以幫助可視化。分析結果 \n \n B. 線性分析，來自 MIT 開放式課件中的 K. J. Bathe 教授，麻省理工學院。該視頻系列是全面的學習課程，介紹了有效的實體和結構線性分析的有限元程序。 \n C. 有限元分析， H 。 J. Qi 博士。將 FEA 流程描述為： \n \n 制定物理模型，即描述（也許簡化）將實際工程問題轉化為 FEA 可以解決的問題 \n 通過離散化實體，定義材料屬性來使用 FEA 模型，並應用邊界條件 \n 選擇適當的近似函數，制定線性方程，並解決這些方程 \n 以數字和視覺格式獲得結果 \n \n 3.4 結構問題：靜載荷 \xa0 \n \n 問題是可以將其視為 “ 個體 ” ，即將載荷和力施加到 單個構件 要設計的上，也可以認為是 “ 整體結構 ” ，也就是說，它可以是對整個（組裝）結構的分析。 \n 許多單個零件（或子裝配體）的供應商會在自己的文獻中提供設計指南，這些指南肯定可供單個設計師使用。以圖形或表格格式顯示的某些信息植根於基本原理，但這可能並不明顯。這種可用的 “ 供應商數據 ” 類型的一些示例是塑料，密封件， EMI 組件和軸承（僅舉幾例）的設計。 \n \n \xa0 \n 電子外殼中靜載荷是由於的構件上的 1. 構件自身的重量 2. 其他構件施加的載荷 3. 由於熱效應，殘餘應力等 \xa0 引起的載荷。由於施加力而導致以下操作失敗： \xa0 \n 1. 超出材料的屈服強度。 \n 2. 構件過度偏轉，導致構件超出設計意圖。 \n 由於所有載荷都會產生一定的撓度，因此必須在設計中的某個時刻知道允許構件產生多少撓度。 \xa0 \n 靜態載荷下的斷裂破壞在韌性材料中不如在脆性材料中常見。在延性構件中，失效通常是由於過度的非彈性作用而導致的，該過度的彈性作用導致在斷裂之前很長的整體變形。 \xa0 \n 動態負載通常是隨時間變化的負載，而靜態負載在相對較短的時間內不會發生顯著變化。電子外殼設計中常見的一些動態載荷是反复載荷，衝擊載荷和能量載荷。能量負荷是指在撞擊期間傳輸的能量（比作用力）更容易表達的負荷。 \xa0 \n 重複載荷造成的斷裂通常稱為 “ 疲勞 ” 故障。振動可能會導致疲勞失效。 \xa0 以下三個問題通常涵蓋以下主題： \xa0 \n 1. 什麼是光束（相對於平板）？ \n 2. 應力公式和最大應力。 \n 3. 撓度公式和最大撓度。 \n 4. 截面模量。 \n 5. 彈性模量。 \n 6. 結束條件。 \n 7. 負載條件。 \n 8. 最壞的情況下加載。 \n 9. 組合加載。 \xa0 \n \n \xa0 \xa0 3.4.1 懸臂梁分析 \xa0 \n 本節重要性在於強調了橫向剪應力對最大應力的影響。在確定樑的最大應力時，除非用盡所有可能產生最大主應力的彎曲應力和剪切應力組合，否則不要對結果感到滿意。通常，剪切圖和彎矩圖的構造以及彎曲應力和橫向剪切應力的數量級比較將大大簡化問題。 \xa0 \n 使用梁應力公式，我們將繼續解決電子外殼設計人員可能面臨的問題的 “ 主推力 ” 。那就是確定 “ 蓋板 ” 到外殼底盤的（最大）緊固件距離。這種類型的問題涉及沿外殼提供的環境密封 \xa0 \n \n 防止灰塵，濕氣和蒸汽 \n 足夠的 EMI 屏蔽 \n \n 我們將在第 4 章中解決問題的屏蔽部分。現在，我們將解決設計基本密封設計幾何形狀方面的 “ 結構性問題 ” ，以保持足夠的強度以提供防潮密封。環境密封問題的結構考慮： \xa0 \n A. 密封材料： “ 產品環境（密封） ”  \n B. 蓋板和底盤材料：此處涵蓋的彈性模量 \n C. 此處覆蓋的截面積（需要慣性矩） \n D. 此處覆蓋的螺栓間距 \n E. 此處覆蓋的壓縮擋塊 \xa0\xa0 \n \xa0 \n 關於方程式（和答案）的其他一些觀察結果是： \xa0 \n 1. 我們發現，鋼製外殼的螺栓間距大於鋁製外殼的螺栓間距 – 這意味著較硬的材料將允許較少的撓曲。 \n 2. 我們看到螺栓間距隨著厚度的三次方而變化 – 我們期望方程式（用於螺栓間距）可能基於 “ 梁 ” 的慣性矩，從而得出厚度的 “ 立方體函數 ” 。 \n 3. 我們希望螺栓間距是 “ 1 ⁄ 4 功率 ” 的函數，這是梁在其長度上具有均勻載荷的撓曲的通用方程，該樑的撓度是其長度到四次冪的函數。對於載荷均勻的梁，相同的一般方程式也將根據其材料彈性模量（ E ）向 1 ⁄ 4 屈光力（ 3 1 ⁄ 4 = 1.3 ，即 78.5 / 60 ）偏轉。 \xa0 \n 因此，作為設計者，我們首先要估算對於鋁製外殼設計。顯然，我們可以在設計中對此間距進行原型設計，並在盡可能真實的條件下進行測試。值得注意的是，我們還假設了墊圈密封區域的橫截面面積以及墊圈在以下方面的厚度變化： \xa0 \n A. 未壓縮狀態（在擰緊緊固件之前）。 \n B. 壓縮狀態（在擰緊緊固件以在設計中設置 “ 止動件 ” 之後，即，緊固件附近的設計特徵專門限制了墊圈的使用範圍） \xa0 \n 被過度壓縮。所有墊圈都要求這些 “ 止動 ” 以使緊固件具有指定的壓縮極限。我們還可以查看類似的設計，其中防護等級（空氣或水）與我們設計的水平相匹配。如果我們發現本身設計的尺寸適用於這些設計，則可以我們一些信心，我們當然有成功的機會，還應當指出的是 的因素之一， 整體 設計將有的 最低 緊固件量。因此，緊固件之間的 5.0 英寸的距離會比 4.0 更好英寸的距離（從而節省了緊固件並節省了擰緊這些緊固件的工作量）。但是， 4.0 英寸的間距將增加墊圈設計在不屬於一部分的附加載荷下密封的可能性。計算（例如衝擊或熱），從而為設計提供一定的安全裕度。 \xa0 \n \xa0 \xa0 3.4.2 撓度公式和最大撓度 \xa0 \n \xa0 \xa0 我們知道在 “ 無肋 ” 結構上增加肋骨將增加該結構處理更多載荷的能力。通常，可以通過在 “ 常規 ” 壁厚上增加厚度來增加強度，例如： \xa0 \n σ = Mc / I  ，其中： \xa0 \n σ= 所考慮構件的應力 \n M = 該構件的最大力矩（通常是力乘以 “\xa0 距離 “ ，即是 ” 的距離 “ 從力到所述構件的部分） \n I / C = Z ，這是所考慮的部分的性質，也稱為從中性軸截面模量 \n C = 距離成員到 “ 外部纖維 ” 的 \n I = 成員的慣性矩（大約質心）成員因此，要增加的承載能力，您可以：增加 I 和 / 或減少 c （增加 Z ）。在 I 為矩形（長方形是用於製造的構件的共同選擇）其中  b = 的長度矩形的底邊， h 是矩形的 厚度 。請注意，，增加厚度（ h 由於 “ 平方函數 ” ）具有很大的影響。因此，將厚度加倍實際上使光束強度提高四倍。上述說來，加倍厚度將增加構件的重量。對於重量敏感型設計而言，這可能是 “ 災難 ” 。但是，通過添加肋骨，肋骨是厚度的 “ 間斷性 ” 添加，強度顯著提高（而重量僅少量增加）。為什麼是這樣？ \n 儘管肋骨會增加板的總慣性矩，但對於短肋骨，從中性軸到橫截面（ c ）的極端纖維的距離會更快地增加。對於間距較大的肋骨，此效果最為明顯。 \n \xa0 \xa0 3.4.3 另一個撓曲問題，這次是卡扣鉤 \n \xa0\xa0\xa0  這裡的想法是，鉤在連接操作過程中短暫偏轉，並卡入底切以完成配合操作。 \xa0 \n 選擇了以下介紹性問題： \xa0 \n A. 顯示了一種通用的緊固方法（用於塑料）。 \n B. 顯示了使用材料共同強度的公式，該公式利用了材料的彈性特性，在設計中將撓度用作優點，並優化了橫截面積和均勻應變。 \n C. 介紹了使用塑料材料進行設計的某些方面。 \n D. 利用供應商提供的文獻資料（在本例中為 Mobay Plastics ）。代替使用第一性原理解決一些更複雜（至今）的問題，使用列表選項和列線圖可以大大減少所需的設計時間。 \xa0 \n 3.5 動態載荷 \xa0 \n 電子機櫃中構件的動態載荷是由於載荷以非穩態方式承受在構件上的。它們包括但不限於： \xa0 \n A. 具有振幅和頻率的振動載荷（包括風力或與地震地面運動相關的慣性力） \n B. 離散衝擊載荷在這些振動和衝擊載荷情況下，將探討一些問題。 \n 章節摘要 在本章中，介紹了有關外殼結構方面的一些基本考慮。我們可以通過為這些外部船體提供材料來開始這種設計。同樣，我們的設計處置將是選擇船體的橫截面。這些橫截面和材料的最佳選擇是利用易於獲得的材料方程式的強度來進行的。但是，在各種解決方案中都需要做出選擇，並且要確定最佳設計，不僅要單獨考慮結構，還需要更多考慮。 \xa0 \n 此外，我們還介紹了一種用於設計電子外殼結構的通用過程。首先要看先前的設計，確定結構上的力，然後繼續確定設計中的安全因素。 \xa0 \n 參考文獻 \xa0: \n \n Roark RJ, Young WC (1975) Formulas for stress and strain. McGraw-Hill Book Co., New York \n Byars EF, Snyder RD (1969) Engineering mechanics of deformable bodies. International \n \n Textbook Co., Scranton \n \n Design guide to the selection and application of EMI shielding materials. TECKNIT, EMI \n \n Shielding Products (1991) \n \n Injection Molding magazine, May 1998 issue, R. Cramer of Dow Materials Engineering Center \n \n \n 四輪車馬達驅動設定 \n 建立一台基本四輪車，並加入馬達驅動直行 \n 影片: \n \n \n 四輪車馬達設定及鍵盤控制加速及轉彎 \n 1.先add<primitive shape< 導入車體形狀 \xa0 \n 2.調整位置 \n 3. 藉由勾選motor properties以啟動馬達，並可以藉由調整轉動速度和力矩達到所想要馬達轉動之效果，底下的lock motor when target velocity is zero 則可以使馬達速度為零時鎖定住馬達 \n 4.檢查碰撞， 物件的動力學設定也必須要設定好，如下方所示物體的碰撞和物體的動態都必須打開，才能使剛剛設定好的馬達進行對輪胎的帶動 \xa0 \n 5.貼上撰寫好的鍵盤控制轉彎程式 \n function sysCall_init() \n    left_front_handle= sim.getObjectHandle(\'left_m\')\n    left_back_handle= sim.getObjectHandle(\'left_m\')\n    right_back_handle= sim.getObjectHandle(\'right_m\')\n    right_front_handle= sim.getObjectHandle(\'right_m\')\n    MaxVel=2\n    leftvelocity=0\n    rightvelocity=0\n    dVel=0.5;\n    --sim.setJointTargetVelocity(left_front_handle,leftvelocity)\n    sim.setJointTargetVelocity(left_back_handle,leftvelocity)\n    sim.setJointTargetVelocity(right_back_handle,rightvelocity)\n    --sim.setJointTargetVelocity(right_front_handle,rightvelocity)\nend\n \nfunction sysCall_actuation() \n    message,auxiliaryData=sim.getSimulatorMessage()\n    while message~=-1 do\n        if (message==sim.message_keypress) then\n            if (auxiliaryData[1]==32) then\n                -- right key\n                leftvelocity=0\n                rightvelocity=0\n                sim.setJointForce(left_front_handle, 0)\n                sim.setJointForce(left_back_handle, 0)\n                sim.setJointForce(right_back_handle, 0)\n                sim.setJointForce(right_front_handle, 0)\n                break\n            else\n                --sim.setJointForce(left_front_handle, 10000)\n                sim.setJointForce(left_back_handle, 10000)\n                sim.setJointForce(right_back_handle, 10000)\n                --sim.setJointForce(right_front_handle, 10000)\n            end\n            if (auxiliaryData[1]==2007) then\n                -- up key\n                leftvelocity=(leftvelocity+rightvelocity)/2\n                rightvelocity=leftvelocity\n                leftvelocity=leftvelocity+dVel\n                rightvelocity=rightvelocity+dVel\n            end\n            if (auxiliaryData[1]==2008) then\n                -- down key\n                leftvelocity=(leftvelocity+rightvelocity)/2\n                rightvelocity=leftvelocity\n                leftvelocity=leftvelocity-dVel\n                rightvelocity=rightvelocity-dVel\n            end\n            if (auxiliaryData[1]==2009) then\n                -- left key\n                leftvelocity=leftvelocity-dVel\n                rightvelocity=rightvelocity+dVel\n            end\n            if (auxiliaryData[1]==2010) then\n                -- right key\n                leftvelocity=leftvelocity+dVel\n                rightvelocity=rightvelocity-dVel\n            end\n        end\n        message,auxiliaryData=sim.getSimulatorMessage()\n    end\n     \n    if leftvelocity>MaxVel then\n        leftvelocity=MaxVel\n    end\n    if leftvelocity<-maxvel then="" leftvelocity="-MaxVel" end="" if="" rightvelocity="">MaxVel then\n                rightvelocity=MaxVel\n    end\n \n    --sim.setJointTargetVelocity(left_front_handle,leftvelocity)\n    sim.setJointTargetVelocity(left_back_handle,leftvelocity)\n    sim.setJointTargetVelocity(right_back_handle,rightvelocity)\n    --sim.setJointTargetVelocity(right_front_handle,rightvelocity)\n \nend \n 操作影片: \n \n week8 \n 安裝以下三個模組 \n 1.pip install opencv-python \n 2.pip install imutils \n 3.pip install numpy \n \n 第三次線上會議 \n 1.成員簽到等候  2.分工作業進度回報及問題討論  3.有問題的同學提出問題    成員名單  1.40723201 (簽) 已建立完成網站  2.40723206 (簽) 已建立完成網站 小組長  3.40723213 (簽) 已建立完成網站  4.40723216 (簽) 已建立完成網站  5. 40723223(簽) 已建立完成網站  6.40723226 () 已建立完成網站  7.40723229 (簽) 已建立完成網站 小組長  8.40723230 (簽) 已建立完成網站  9.40723241 (簽) 已建立完成網站  10.40723242 () 已建立完成網站 小組長  11.40723246 (group leader) (簽) 已建立完成網站  12.40732319 ()    ※作業一(4 輪車)  *根據主題 0 和主題 1 的素材，您能否具體描述機械設計團隊，為了完成作業四輪機 器人需要做些什麼?    四輪車馬達設定及鍵盤控制加速及轉彎 \n \n', 'tags': '', 'url': 'week6~9.html'}, {'title': 'week10~14', 'text': 'week10 \n 對ssh連線 \n (1)到y槽的portablegit將sh_for_solvespace檔案複製並修改成sh.exe \n (2)進入黑窗輸入sh和ssh-keygen -t rsa -b 4096 -C "使用者學號" \n (3)下載putty並利用其中的putty.gen創建兩把金鑰 \n (4)修改啟動器中的指令 \n set GIT_HOME=%Disk%:\\portablegit\\bin\\\nset GIT_SSH=%Disk%:\\putty\\plink.exe \n (5)進入config中更改指令url = git@github.com:mdecourse/cd2020.git在mdecourse的地方要改成自己的學號 (6)開啟putty.exe進去設定github.com和proxy位置其中ssh中的auth的地方必須選取剛剛創建的金鑰 \n (7)用編輯器複製課程網站中的step6指令並且儲存放入.ssh資料夾之中 \n ProxyCommand y:/putty/plink.exe github.com %h %p\n\nHost github.com\n    User git\n    Port 22\n    Hostname github.com\n\n    TCPKeepAlive yes\n    IdentitiesOnly yes \n (8)進入github並且在setting中的ssh將金鑰開啟並複製放入金鑰設置處 \n \n Ubnutu對外連線-IPV4 \n 1.選擇主機網路 NAT Network ，新增埠號如下圖所示 : \n \n 2.登入密碼一樣是 kmol2020 \n 3.打開 LXTermial 輸入 ifconfig>sudo apt install net-tools 輸入密碼也是 kmol2020 \n 4.輸入 ping6 127.0.0.1 測試是否可執行 \n 5.進入 cd2020pj1 資料夾然後 git pull \n 6.輸入 sudo vi wsgi.py 並且按下 i 編輯內容將 ’host=127.0.0.1’ 編輯設置為10.0.2.4 \n 7.按下 esc 並且輸入 :wq 來存取，開啟 cd2020pj1.leo \n 8.用 nav 尋找 allowExt 檔案位置並且新增 ttt 檔案 \n 9.在 tmp 下輸入 sudo vi oauth_scrum.txt 再輸入 python3 wsgi.py 開啟遠端 \n 10.進入 https://127.0.0.1:18443/alogin 測試是否可以上傳 ttt 檔案 \n ※ \xa0 sudo 為使用特殊的權限執行的程式。 vi 為編輯內容 \n ※ \xa0 ifconfig 為網卡信息的各項說 \n \xa0 \n \xa0*更新問題: \n 1.因為老師有將 cd2020pj1 更新，所以我們從虛擬主機下開啟 python3 wsgi.py 之模組有缺少問題 \n 解決 : \xa0 pip3 install pydrive安裝此模組 \n 2.mako系統版本沒有更新，導致遠端連線出現問題 \n 解決 : \xa0 輸入 ”sudo pip3 install mako==1.1.3” 更新版本 1.1.3 \n 操作影片: \n \n Ubnutu對外連線-IPV6 (須在學校操作) \n 1.選擇主機網路 NAT Network 設定 IPV6 \n 2.打開 LXTermial 並且輸入 cd /etc \n 3.按照路徑進入 cd apt > cd apt.conf.d > sudo vi proxy.conf \n 5.密碼 kmol2020 並且一樣按 i 鍵進入編輯模式 \n 6.輸入 Acquire::http::proxy "http://[2001:288:6004:17::53]:3128"; \n 7.按 esc 並且使用 :wq 來儲存，再用 sudo apt update apt 更新 apt \n 8.ifconfig>sudo apt install net-tools， cd etc/netplan \n 9.輸入 sudo vi 00-installer-config.yaml 並且按照以下方式更改縮排 \n \n \n \n \n \xa0 \n \xa0 \n \xa0 \n \xa0 \n \xa0 \n \xa0 \n \n \n network: \n \xa0\xa0ethernets: \n \xa0\xa0\xa0\xa0enp0s3: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0dhcp4: true \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0dhcp6: true \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0nameservers: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0addresses: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0- 2001:b000:168::1 \n \n \n \n \n 10.輸入 ping6 2001:288:6004:17::254 測試是否可以連線 \n 11.新增 4 個埠號 \n 12.輸入 ifconfig \xa0 來查詢在 IPV6 的 ip \n 13.進入 cd2020pj1 資料夾執行 git config --global --add http.proxy[2001:288:6004:17::53]:3128 \n 13.輸入 sudo vi wsgi.py wsgi.py 將近端的 host 更改成 :: ，再輸入 python3 wsgi.py \n 15.用平常開啟近端的方式 https://[::1]:18443/alogin \n 16.打開 leo 新增 ttt 檔案的上傳設定測試是否可以上傳 \n 操作影片: \n \n week11 \n 第一組 第四次會議 (WEEK11)     1.成員簽到等候 2.分工作業進度回報及問題討論 3.有問題的同學提出問題    成員名單  1.40723201 (簽) 已建立完成網站  2.40723206 (簽) 已建立完成網站 小組長  3.40723213 (簽) 已建立完成網站  4.40723216 (簽) 已建立完成網站  5. 40723223(簽) 已建立完成網站  6.40723226 (簽) 已建立完成網站  7.40723229 (簽) 已建立完成網站 小組長  8.40723230 () 已建立完成網站  9.40723241 (簽) 已建立完成網站  10.40723242 (簽) 已建立完成網站 小組長  11.40723246 (group leader) (簽) 已建立完成網站   topic2:   coppeliasim :40723246  MSModelingAndTFApproaches.pdf . 207 頁:6 人  40723201 1-30  40723213 31-60  40723216 61-90  40723223 91-120  40723226 121-150  40723246 151-207  MechatronicDesignCases.pdf . 46 頁:2 人  40723229 1-23  40723230 24-46  topic3:   MechaFutureAndChallenges.pdf . 38 頁:2 人  40723206 1-19  40723241 20-38  MechaEducFutureNeed.pdf . 20 頁:1 人  40723246 20 \n 直播meeting4影片: \n 網址: https://youtu.be/Ti7BFHDErb8 \n \n 分組作業: \n MechaFutureAndChallenges (p.20~38) \n downlaod pdf: https://github.com/s40723206/cd2020/blob/master/downloads/assignment%203/MechaFutureAndChallenges.pdf \n week12 \n mini project-b12 \n cdbw12-2 倉儲: https://github.com/mdecourse/cdbw12-2 \n cdbw12-2 網站: http://mde.tw/cdbw12-2/content/index.html \n week13 \n mini project-b13 \n cdbw13-1 倉儲: https://github.com/mdecourse/cdbw13-1 \n cdbw13-1 網站: http://mde.tw/cd2020/content/W13-2b.html \n week14 \n 第一組 第五次會議 (WEEK14)\xa0 1.成員簽到等候 2.分工作業進度回報及問題討論 3.有問題的同學提出問題\xa0 成員名單\xa0 1.40723201 (簽) 已建立完成網站\xa0 2.40723206 (簽) 已建立完成網站 小組長\xa0 3.40723213 (簽) 已建立完成網站\xa0 4.40723216 (簽) 已建立完成網站\xa0 5. 40723223(簽) 已建立完成網站\xa0 6.40723226 (簽) 已建立完成網站\xa0 7.40723229 (簽) 已建立完成網站 小組長\xa0 8.40723230 (簽) 已建立完成網站\xa0 9.40723241 (簽) 已建立完成網站\xa0 10.40723242 (簽) 已建立完成網站 小組長\xa0 11.40723246 (group leader) (簽) 已建立完成網站 \n 1.講解ipv6連線設定及ttt檔更改的新路徑 \n 2.虛擬主機及ubnutu bug解決方式 \n \n \n mini project-b14 \n cdbw14-1 倉儲: https://github.com/mdecourse/cdbw14-1 \n cdbw14-1 網站: http://mde.tw/cdbw14-1/content/index.html \n', 'tags': '', 'url': 'week10~14.html'}, {'title': 'week15~18', 'text': 'week15 \n mini project-b15 \n cdbw15-2 倉儲: https://github.com/mdecourse/cdbw15-2 \n cdbw15-2 網站: http://mde.tw/cdbw15-2/content/index.html \n week16 \n 每人進行ipv6對外連線並連結到個人特定的proxy \n 連結: https://[2001:288:6004:17:2020:2:0:7206]:19443/ \n', 'tags': '', 'url': 'week15~18.html'}, {'title': 'Assignment', 'text': '', 'tags': '', 'url': 'Assignment.html'}, {'title': 'assignment1', 'text': '', 'tags': '', 'url': 'assignment1.html'}, {'title': 'Random Grouping', 'text': '要進行隨機分組及隨機點名，必須先了解程式裡導入的模組及在模組中所用的 語法、迴圈: request 、 ast.literal_eval 、 random 、 for 迴圈 (1) \xa0request 模組:此模組是為了可以使用 Python 來下載網頁上的資料，是以 request 模組建立適當的 HTTP 請求，透過 HTTP 請求從網頁伺服器下載 指定的資料，分為兩種模式Post、Get。 參考文獻: \xa0 https://ithelp.ithome.com.tw/articles/10206215 (2) \xa0 ast 模組: 此模組是python原始碼到位元組碼的一種中間產物，藉助 ast 模組可以從語法樹的角度分析原始碼結構，其中的語法 ast.literal_eval 是為了能夠安全地評估表達式節點或包含Python文字或容器顯示的字符 串。提供的字符串或節點只能由以下Python文字結構組成：字符串、字 節、數字、元組、列表、字典、集合、布林值、None。 參考文獻: \xa0 https://docs.python.org/3/library/ast.html https://www.itread01.com/content/1544847254.html (3) \xa0 random 模組:此模組用於生成偽隨機數，且有許多種用法，例如:隨機選取 choice 、隨機選取 \xa0sample \xa0 (一次選多筆資料)、隨機調換順序 \xa0shuffle \xa0 (就 地調換順序)、隨機取得亂數 \xa0 random \xa0 (0~1之間的隨機亂數)、隨機取得亂 數 \xa0 uniform \xa0 (可以指定範圍)。 參考文獻: \xa0 https://ithelp.ithome.com.tw/articles/10207483 (4) \xa0 for 迴圈: 在處理資料的時候，時常會需要重複執行某些相同的步驟；而迴 圈 (loop) 的作用是讓指定的某段敘述在條件符合的情況下一直重覆執行， 是程式設計中很重要的一種控制結構，且分為兩類: for 、 while \n ○ \xa0 for 迴圈基本語法: for \xa0 變數 \xa0 in \xa0 list 、 字串 、 range ○ \xa0 while 迴圈基本語法: while \xa0 布林值 \xa0 for 迴圈及 while 迴圈比較: \xa0 for 迴圈比較適用在已知迴圈數的問題，而 while 迴圈則適用在「無法預知迴圈數」的問題上。 參考文獻: \xa0 https://medium.com/ccclub/ccclub-python-for-beginners-tutorial4990a5757aa6 \n', 'tags': '', 'url': 'Random Grouping.html'}, {'title': 'Potable System', 'text': 'text: \n 將可攜系統下的python 3.7.3系統更新至python 3.8.2 \n 1.先去GOOGLE SEARCH\xa0 PYTHON \xa0 (點這下載) \n 2.下載 Windows x86-64 executable installer \xa0 (點這下載) \n 3.載完點並 不要勾選pip選項，接著按下next選取放置資料夾 \n 4.在隨身系統下新增放置資料夾cd2020，並在cd2020下新建資料夾data，data<py382< wscite432<portablegit \n 5.下載SciTE系統 \xa0 full 64-bit download ，下載完後解壓縮至data下的wscite432 \n 6.在cd2020下建立新的start.bat及stop.bat \n \n 7.至 SciTE系統更改 start.bat及stop.bat \n \n \n 8. 載入MSYS2\xa0 msys2-x86_64-20190524.exe \xa0至data 9. 載入PortableGit\xa0 64-bit Git for Windows Portable \xa0至 portablegit 10 .裝入 pip ，另存新檔到data 11.測試 將python3.8.2版本，將少的模組下載回來 \n \n', 'tags': '', 'url': 'Potable System.html'}, {'title': 'Four Wheel Car', 'text': 'Four Wheel Car- Analysis and integration \n BubbleRob tutorial :\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 此部分由40723206提供 \n 在此教程中會讓我們設計簡單的BubbleRob機器人並進行一些基礎的模擬操作，而大二上我們其實就有實際的以v-rep操作過這個教程，在這個教程中的說明包括了如何建造模型機器人主體、車輪及後方支撐滑塊，還有如何建造及設置障礙物，以及設定好的距離傳感器後使其去感測並避開我們所設置的障礙物，而最重要的要點是如何去設計指令讓傳動器依照我們所想要的方式去做動，且當距離感測器偵測到障礙物時才能使機器人迅速閃避障礙物，另外還有視覺辨識器，使機器人在移動時，讓我們能夠觀測到機器人行徑方向之路況。 \n translation Simulation ~ PDF \n \n translation\xa0 Simulation dialog ~ PDF \n \n Line following\xa0BubbleRob tutorial \n 在本教程中，我們旨在擴展BubbleRob的功能，以使他/她遵循地面上的規則。確保您已經閱讀並理解了第一個BubbleRob教程。本教程由Eric Rohmer提供。 \n 在CoppeliaSim的安裝文件夾中的tutorials / BubbleRob中加載第一個BubbleRob教程的場景。與本教程相關的場景文件位於tutorials / LineFollowingBubbleRob中。 下圖說明了我們將設計的仿真場景： \n \n 我們首先創建3個視覺傳感器中的第一個，並將其附加到bubbleRob對象。選擇[菜單欄->添加->視覺傳感器->正交類型]。通過雙擊場景層次中新創建的視覺傳感器圖標來編輯其屬性，並更改參數以反映以下對話框： \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\xa0 \n 視覺傳感器必需面向地面，因此選擇它，然後在“方向”對話框中的“方向”選項上，將“ Alpha-Beta-Gamma”項設置為[180; 0; 0]。 \n 我們有幾種可能性可以讀取視覺傳感器。由於我們的視覺傳感器只有一個像素，並且操作簡單，因此我們只需查詢視覺傳感器讀取的圖像的平均強度值即可。對於更複雜的情況，我們可以設置視覺回調函數。現在，複製並貼上視覺傳感器兩次，並將其名稱調整為leftSensor，middleSensor和rightSensor。將bubbleRob設置為其關係（即，將其附加到bubbleRob對象）。現在，您的傳感器在場景層次中應如下所示： \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n 讓我們正確放置傳感器。為此使用位置對話框，在位置選項卡上，並設置以下絕對坐標： 左傳感器：[0.2; 0.042; 0.018] 中間傳感器：[0.2; 0; 0.018] 右傳感器：[0.2; -0.042; 0.018] 現在讓我們修改環境。我們可以移去BubbleRob前面的幾個圓柱體。接下來，我們將構建機器人將嘗試遵循的路徑。從現在開始切換到頂視圖：通過頁面選擇器工具欄按鈕選擇頁面4。然後點擊[菜單欄->添加->路徑->圓圈類型]。使用鼠標啟用對象移動。您可以通過兩種方式調整路徑的形狀： 選擇路徑（並且只有路徑）後，按住Ctrl並點擊其控制點之一。然後可以將它們拖動到正確的位置。 選擇路徑後，進入路徑編輯模式。在那裡，您可以靈活地調整各個路徑控制點。 \n 一旦對路徑的幾何形狀滿意（您隨時可以在以後的階段對其進行修改），請選擇它，然後在路徑屬性中取消選中“顯示點的方向”，“顯示路徑線”和“顯示路徑上的當前位置”。然後點擊顯示路徑整形對話框。這將打開路徑整形對話框。點擊啟用路徑變更，將類型設置為水平線段，並將縮放因子設置為4.0。最後將顏色調整為黑色。我們必須對路徑進行最後一個重要的調整：當前，路徑的z位置與地板的z位置重合。結果是有時我們會看到路徑，有時會看到地板（這種效果在openGl行話中被稱為“ z-fighting”）。這不僅影響我們所看到的，而且還會影響視覺傳感器所看到的。為了避免與z戰鬥有關的問題，只需將路徑對象的位置向上移動0.5毫米即可。 \n 最後一步是調整BubbleRob的控制器，使其也將遵循黑色路徑。打開附加到bubbleRob的子腳本，並將其替換為以下代碼： \n \n \n \n \n function speedChange_callback(ui,id,newVal)\n    speed=minMaxSpeed[1]+(minMaxSpeed[2]-minMaxSpeed[1])*newVal/100\nend\n\nfunction sysCall_init()\n    -- This is executed exactly once, the first time this script is executed\n    bubbleRobBase=sim.getObjectAssociatedWithScript(sim.handle_self)\n    leftMotor=sim.getObjectHandle("leftMotor")\n    rightMotor=sim.getObjectHandle("rightMotor")\n    noseSensor=sim.getObjectHandle("sensingNose")\n    minMaxSpeed={50*math.pi/180,300*math.pi/180}\n    backUntilTime=-1 -- Tells whether bubbleRob is in forward or backward mode\n    floorSensorHandles={-1,-1,-1}\n    floorSensorHandles[1]=sim.getObjectHandle("leftSensor")\n    floorSensorHandles[2]=sim.getObjectHandle("middleSensor")\n    floorSensorHandles[3]=sim.getObjectHandle("rightSensor")\n    -- Create the custom UI:\n        xml = \'<ui title="\'..sim.getObjectName(bubbleRobBase)..\' speed" closeable="false" resizeable="false" activate="false">\'..[[\n        <hslider minimum="0" maximum="100" onchange="speedChange_callback" id="1"/>\n        <label text="" style="* {margin-left: 300px;}"/>\n        </ui>\n        ]]\n    ui=simUI.reate(xml)\n    speed=(minMaxSpeed[1]+minMaxSpeed[2])*0.5\n    simUI.setSliderValue(ui,1,100*(speed-minMaxSpeed[1])/(minMaxSpeed[2]-minMaxSpeed[1]))\nend\n\nfunction sysCall_actuation()\n    result=sim.readProximitySensor(noseSensor)\n    if (result>0) then backUntilTime=sim.getSimulationTime()+4 end\n\n    -- read the line detection sensors:\n    sensorReading={false,false,false}\n    for i=1,3,1 do\n        result,data=sim.readVisionSensor(floorSensorHandles[i])\n        if (result>=0) then\n            sensorReading[i]=(data[11]<0.3) -- data[11] is the average of intensity of the image\n        end\n        print(sensorReading[i])\n    end\n\n    -- compute left and right velocities to follow the detected line:\n    rightV=speed\n    leftV=speed\n    if sensorReading[1] then\n        leftV=0.03*speed\n    end\n    if sensorReading[3] then\n        rightV=0.03*speed\n    end\n    if sensorReading[1] and sensorReading[3] then\n        backUntilTime=sim.getSimulationTime()+2\n    end\n\n    if (backUntilTime<sim.getSimulationTime()) then\n        -- When in forward mode, we simply move forward at the desired speed\n        sim.setJointTargetVelocity(leftMotor,leftV)\n        sim.setJointTargetVelocity(rightMotor,rightV)\n    else\n        -- When in backward mode, we simply backup in a curve at reduced speed\n        sim.setJointTargetVelocity(leftMotor,-speed/2)\n        sim.setJointTargetVelocity(rightMotor,-speed/8)\n    end\nend\n\nfunction sysCall_cleanup()\n\tsimUI.destroy(ui) end \n \n \n \n \n 您可以輕鬆地調試以下視覺傳感器的生產線：選擇一個，然後在場景視圖中選擇[右鍵->添加->浮動視圖]，然後在新添加的浮動視圖中選擇[右鍵->視圖- ->將視圖與選定的視覺傳感器關聯]。 \n CoppeliaSim \n 外部控制器教程 在CoppeliaSim中，有幾種方法可以控制機器人或仿真： 最方便的方法是編寫一個子腳本來處理給定機器人或模型的行為。這是最方便的方法，因為子腳本直接附加到場景對象，它們將與相關的場景對像一起復制，它們不需要使用外部工具進行任何編譯，它們可以在線程或非線程模式下運行，它們可以通過自定義Lua函數或Lua擴展庫進行擴展。使用子腳本的另一個主要優點是：與本節中提到的後3種方法（即使用常規API）一樣，沒有通信延遲，並且子腳本是應用程序主線程的一部分（固有的同步操作）。 \n \xa0\xa0\xa0 \xa0 可以控制機器人或模擬的另一種方法是編寫插件。插件機制允許使用回調機制，自定義 Lua 函數註冊，當然還可以訪問外部函數庫。插件通常與子腳本結合使用。使用插件的主要優勢還在於，與本節中提到的後 3 種方法（即使用常規 API ）一樣，沒有通信延遲，並且插件是應用程序主線程的一部分（固有的同步操作）。插件的缺點是：它們的編程更加複雜，並且也需要使用外部編譯。 \n \xa0\xa0 \xa0 控制機器人或模擬的第三種方法是編寫依賴於遠程 API 的外部客戶端應用程序。如果您需要從外部應用程序，機器人或另一台計算機運行控制代碼，這是一種非常便捷的方法。遠程 API 有兩個版本：基於 B0 的遠程 API 和舊版遠程 API 。 \n \xa0\xa0\xa0 \xa0 控制機器人或仿真的第五種方法是通過 ROS 節點。 \xa0 ROS 與遠程 API 相似，是使多個分佈式進程相互通信的便捷方法。儘管遠程 API 非常輕巧且快速，但它僅允許與 CoppeliaSim 通信。另一方面， ROS 允許幾乎將任意數量的進程相互連接，並且提供了大量兼容的庫。 \n \xa0\xa0\xa0\xa0 \xa0 控制機器人或模擬的第六種方法是通過 BlueZero （ BØ ）節點。與 ROS 類似， BlueZero 是使多個分佈式進程相互通信的一種便捷方法。 \n \xa0\xa0\xa0\xa0 \xa0 控制機器人或模擬的第七種方法是編寫一個外部應用程序，該應用程序通過各種方式（例如管道，套接字，串行端口等）與 CoppeliaSim 插件或 CoppeliaSim 腳本進行通信。 \n', 'tags': '', 'url': 'Four Wheel Car.html'}, {'title': 'assignment2', 'text': '', 'tags': '', 'url': 'assignment2.html'}, {'title': 'IndustrialAndEngineeringProductDesignCollaboration', 'text': "翻譯文件擷取: \n IndustrialAndEngineeringProductDesignCollaboration.pdf \n 協同產品設計過程 \xa0 \n 本研究旨在闡明工業設計師和工程設計師如何協作 \xa0 \n 這種聯盟如何反映設計過程。我們與來自六個消費產品製造商的34名工業和工程設計師進行了有關實際產品設計項目的深入採訪。 \xa0 \n 首先 從訪問數據中識別出各個設計過程。 其次 ，我們然後使用鑲嵌方法將設計過程進行比較並合併為協作過程。 最後 ，我們簡化了協作流程，以創建具有代表性的流程模型。 \xa0 \n 結果 ，我們發現了 四種類型 的典型協同產品設計流程及其特徵： \xa0 \xa0 \n E類型1 ：由ID主導的概念驅動過程， 類型2 ：由ID主導的內外聯合過程， 類型3 ：由ED主導的內在先流程， 類型4 ： ID＆ED協同流程 。 \xa0 \n \xa0 工業和工程設計師之間 \xa0 \n 它經常被認為工程設計人員使用一個'向外接近 \xa0 電子商務 \xa0 發展從功能外觀“，而工業設計師遵循'向內方法 \xa0 E \xa0 從外觀上的功能。 \xa0 \n 基於這些概念，提出了以下 兩種設計策略 ：一種是“ 由內而外 ”的策略，定義為首先設計內部工作部件，從而限制了外部形狀，另一種是“ 由外而內 ”的策略。 \xa0 \n 這些設計策略涉及公司應在特定條件下為特定目的採取的組合設計過程。但是，從經驗證據中很少了解到這兩種策略如何在工業項目中應用。很少有嘗試從工程設計和工業設計的綜合角度來看待設計過程。 \xa0 \n \xa0 本文有兩個目標 \xa0 \n 闡明在實踐中應用的原始協作產品設計過程的形式；其次，確定在不同條件下用於不同目的的不同類型的過程。為此，我們對六家消費產品製造商的工業設計師和工程設計師進行了深入採訪。我們使用“確定了每個公司的產品設計過程鑲嵌法”，其中結合了從訪談數據中提取的各個設計過程以完成一個協作過程。結果，我們確定了 四種 典型的協作產品設計流程及其特徵。\xa0 \xa0 \n 本文包括三個部分：第一部分詳細介紹了研究方法。第二部分介紹了典型的協作產品設計過程及其特徵。最後，它總結了結果，並討論了對設計文獻的影響和貢獻。 \xa0 \n \xa0 Berends，Reymen，Stultiens和Peutz（2011） \xa0 對五家公司的設計過程進行了調查。 \xa0 Kleinsmann和Valkenburg（2003） \xa0 收集了有關工業中協同設計過程的故事，並確定了協同設計項目的關鍵主題和情節。 \xa0 \xa0 \n 追溯性賬目的不可靠或不准確 （ Ackroyd＆Hughes，1981年 ） \xa0 \n 我們採用了三個標準來選擇研究目標：（1）多家公司類似的產品領域； （2）工程和工業設計部門的多個參與者； （3）在整個產品開發週期中已經完成的項目。 \xa0 \n 大多數產品開發活動需要一組輸入 \xa0 \n 基於階段的模型由旨在執行任務的動作和旨在評估執行任務的結果的決策組成；其中完成構成進展到下一個階段 \xa0 \n 初步輸出 ，狀態報告等進行生產（ Browning等人，2006年 ）。這一觀點得到了有關設計過程和組織的大量文獻的支持（例如， \xa0 Burns＆Stalker，1961； Clark，1991； Hubka＆Eder，2012 ）。 \xa0 Ulrich和Eppinger（2012） \xa0 將其描述為最終結果所必需的信息，該信息被注入以將當前設計問題轉換為下一個問題以降低不確定性，從而產生輸出，直到形成最終結果為止。這被建模為將功能規範（輸入）轉換為偽影規範（輸出）的過程。指出，從信息處理的角度進行過程建模無法捕獲完整的信息流，因為人們對交互的了解。他們認為，確定組織單位之間的相互作用的重要性，因為它們會引起建立可交付的流程模式的活動之間的依賴。決定性，過程建模的在此透視基本元件被概括為）'的信息流與IPO（輸入端 E 方法 e 輸出）REP-resentation和'相互作用組織單位的'（人，團隊，公司等“。\xa0 \xa0 \n 從狀態轉換的角度來看， \xa0 Reymen（2001） \xa0 將設計過程描述為通過在每個階段執行任務並評估設計活動將狀態從一種狀態轉移到另一種狀態的過程。這是台門車型，在設計活動發生在舞台的每一個階段，設計輸出的設計審查，從而作出決定之間是否進入下一個階段，重複當前階段或拒絕該項目的進行評估一致 ，大多數基於階段的模型都提出了這種觀點（ Wynn＆Clarkson，2005 ）。基於階段的模型由旨在執行任務的動作和旨在評估執行任務的結果的決策組成；其中完成構成進展到下一個階段 \xa0 （j̈ansch＆Birkhofer， 2006; Roozenburg ＆交叉 ，1991）。 除此之外，當從一個階段跳到另一個階段或在子過程之間鏈接時，伴隨輸入和輸出的信息流就會發生 \xa0 \n \xa0 “任務” \xa0 來表示項目的初始起點，不同於在每個階段執行的“任務”。但是，這兩個術語的用法類似，用以表示執行設計工作，因此，人們對相互連接和處理任務的設計過程達成了普遍共識（ Dorst，2008年 ）。\xa0 \xa0 \n 從狀態轉換的角度來看，有兩個活動：執行任務和評估結果。通常，評估會在相對較短的時間內進行，以決定“前進，重複或下降”。因此，我們將這些類型的活動（評估，設計審查，檢查，決策）稱為“事件”。目前，我們有兩個編碼類別： “任務”和“事件”。總之，我們可以用四個編碼類別對設計過程進行建模。 \xa0 “任務”，“事件”，“信息流”和“交互” ，並且可以用階段的連接來表示。此時，的設計過程的一個階段可以用來表示'輸入端 E 任務（設計活性 ）E 事件（deci-錫永製作） 在線 輸出“。以下描述瞭如何使用以上四種編碼類別對過程元素進行編碼。\xa0 \xa0 \n \xa0 任務 ：清除設計人員執行的任務，例如“想法草圖”，“ 3D建模”等。 “是的，我做的草圖用圓珠筆來表達我的想法。對其進行少量著色或對其進行掃描以在Photoshop上進行修飾。'我們將其編碼為帶有“想法草圖”標籤的任務類別。 事件：完成特定任務後，將進行一個事件（決策），從而導致下一個動作。一位受訪者說； '我們去樣機公司製造原型，並帶走所有兩個或三個原型。與他們舉行了一次模擬評估會議。工程師們聽老闆的批評。老闆說就是這樣，那就是，如果工程師有不同的想法，他們會提供意見。最後一個被選中。 我們在事件類別中使用標籤“模擬評估會議”對此進行了編碼。\xa0 \xa0 \n 信息流 ：當任務或事件發生時會生成信息流。它總是伴隨著輸入和輸出。一位受訪者說；實際上，我們根據工程設計人員提供的規范進行工作。直到有事情出現，我們才開始工作。這說明工業設計師從工程設計師那裡接收到了“規格數據”作為輸入，他們開始使用他們的工作。我們將此“規範數據從ED編碼為ID”。另一個摘錄是：選擇一個後，我們會將模型的3D數據傳遞到工程部門。我們發送“ STEP”文件，然後使用“ UG”開始設計。這說明他們將3D CAD數據作為設計活動的輸出發送給了工程設計人員，這些輸入成為了後續工程設計活動的輸入。我們對“從ID到ED的3D CAD數據”進行了編碼。 \xa0 交互 ：發生任務或事件時，兩組經常交互。例如，當工業設計師檢查是否可以修改內部空間時，工程設計師通過提供相關信息為他們提供建議。在這種情況下，會發生激烈的互動，工程設計師將充當“顧問”。情況就是這樣； “他們解釋說”這應該放在這裡和應擺在那裡“。然後，我們修改尺寸和位置，然後再次詢問它們是否可以減小2毫米的間隙。如果他們說“是”，我們會將一個部分壓平。我們將其編碼為“ ED到ID的顧問角色”。 \xa0 \n 我們從每個轉錄的訪談數據中識別出流程要素。我們盡可能用參與者自己的單詞標記它們。我們將現場說明用作補充數據源。在此過程中，我們按時間順序排列並連接了編碼元素，以構建部分設計過程。 該方法被廣泛採用以可視化工業過程模型。 \xa0 \n \xa0 輸出研究結果 \xa0 \n \n \xa0 流程塊中的流程從初始輸入開始，並在內部的各個小階段中運行。迭代或反饋可能在塊內的各個小階段之間發生。最後，他們對最終結果做出最終決定。這是一個里程碑，指示該階段將跳到下一階段。例如，在圖3的藍色方框中，此塊的主要工作是開發執行六個小階段的設計概念。當他們處於渲染階段時，如果在渲染評估事件中不滿意渲染結果，則可以返回到構思草圖階段。 \xa0 \n \xa0 \n 在最後階段，設計模型作為結果由高層管理人員確認，然後跳至“產品計劃會議”。在前一個結果進入下一個塊的輸入之後，兩個過程塊之間的過程流幾乎沒有機會被逆轉。跨團隊通常進行最終設計，並由高層經理在每個工作組中批准。回到上一個區塊意味著它無法滿足市場時間表。因此，應該由最高管理層對此事做出決定。 \xa0 \n \xa0 \n 成果輸入 \xa0 \n \xa0 \n 工業設計師的設計活動稱為“ Concept Design-I”，而工程設計師的設計活動稱為“ Concept Design-E”。 \xa0 \n 圖5是圖3的簡化版本。圖3中的彩色框使用了圖5中的相同彩色框進行了簡化。圖3中的藍色框變為“ Concept Design-I”。圖3中的“產品計劃會議”定義為“產品計劃”，並以細長的六邊形可視化。由於它是一個單獨且獨特的設計活動，因此被確定為單個階段。在紅色塊內部，有兩個並行的處理塊；右側的“ Concept Design-E”（紅色的小方框）是“主流程塊”，左側的“形狀修改”（黃色）是“對應的塊”。這兩個塊不視為單獨的階段，因為它們與紅色大塊內的起點到終點相連。這樣，兩個設計師團隊之間的互動就很強。為了區分兩個平行的塊，我們用粗實線表示主塊，並用淺實線表示相應的塊。在綠色塊中，由於所有12個流程之間的設計活動都沒有什麼區別，因此我們將詳細設計，測試和生產的兩個順序流程塊合併為一個。因此，在本研究中我們將它們視為一個階段。當綠色方框中的設計過程繼續進行時，工業設計師會根據工程設計師的要求或他們自己的設計檢查目的不時做出反應。他們通常將這些活動稱為“跟進”，與主要任務有所不同。這些活動顯然存在，但不屬於流程塊。它們是如圖3所示的離散過程元素，因此用虛線表示。為了幫助視覺理解，實心箭頭，雙向寬箭頭和單個方向寬箭頭分別表示過程流，相互交互和單向交互。 \xa0 \n", 'tags': '', 'url': 'IndustrialAndEngineeringProductDesignCollaboration.html'}, {'title': 'DesignCollaborationBetterProducts', 'text': '\n designcollaborationbetterproducts ( 資料 ) \n 通過協同設計創造更好的產品-心態，工具，過程 \n 今日的數位產品比以往都更加複雜。創建它們需要多個團隊， 成員，每個成員都有自己的一套技能和專業知識。以我們的客戶Savvy為例， 與以下人員有緊密合作：產品經理，UX設計人員，視覺設計師，開發人員，產品 顧問和行銷人員。 \n 我們使用協同設計來處理這種複雜的工作。並且正確完成，協同設計可幫助 每個專家都有共同的心態，流程和工具，更快共同建立更好的產品， \n 我們編寫了此資源以幫助其他應用程式創建者採用協同設計文化和流程。 學習為什麼協同設計對於創造引人注目的產品以及經驗很重要。 我們還將深入探討協同設計的心態和文化、工具的要素， 進行有效的協同設計，以及實際工作中的協同設計的例子。 \n 什麼是協同"設計" \n 在進入正題之前，我們需要同時了解什麼是協同設計以及什麼不是。 簡單來說，協同設計就是在設計優先的環境中進行協作。 但由於設計的本質，特別是我們在Savvy所做的設計，設計協作趨向於 超越人們通常認為的協作。 \n 通常將協作定義為兩個或兩個以上的人共同完成一項任務 為了實現共同的目標，協同設計甚至包含更多。 \n 協同設計包括更多不同技術，艱鉅挑戰和更大規模的人員，這些都對目標 具有深遠的影響。 \n 您可能將協作視為兩個人用心在一個藝術品上。它只需要溝通、團隊合作同心協力。 協同設計是指一組策展人精心設計訪問者的體驗。 他們選擇藝術品，選擇在何處以及如何懸掛藝術品， 它所居住的房間（以及房間的照明，家具），甚至前面的房間和建築物同整為一個藝術品 \n 為什麼協同設計很重要 \n 你可以在沒有協作的情況下設計產品，但是需要一個協同設計過程才能完成 好的產品。這就是協同設計如此重要的原因。 \n 我們不僅為客戶構建應用程序。Savvy構建了複雜的多平台體驗和內部系統， 甚至在某些情況下還包括整個品牌和業務。為此，我們為了利用專業知識 跨足多個核心項目：策畫、設計、開發和行銷。每個項目都涉及了各成員各自的技能和專長。 \n 協同設計將這些思想融合在一起，將他們各自的專業知識結合在一起創建解決方案， 以解決共同目標的所有方面。而不是以一個人遇到問題角度來看， 協同設計將這個問題擺在所有專家面前，迫使他們考慮新觀點和可能性。 \n 例如，我們在設計過程的早期就讓我們的開發人員參與進來，以確保我們能盡快解決技術問題的機會和局限性。 這使我們可以利用並提升我們的技術能力，同時進一步消除在處理程序成本高昂的障礙。 它還限制了一個人可以單獨處理工作的可能，從而使工作保持公開狀態並強調用戶需求和產品目標。 \n 培養協同設計心態 \n 在設計過程中建立有效的協同時，正確的思維方式有好的幫助。 它訂定了誰進行協作並如何進行以及達到何種目的的準則。 \n 與每個人合作 \n 設計師有時會認為不是設計師的人沒有資格提供良好的產品反饋。 但是出色的設計不只是視覺效果。它涵蓋了有關產品的所有內容，從它的品牌、工程技術及其成長 \n 協同設計包含許多人，每個人都有自己的觀點和優勢。它給大家一個發聲的平台。 這些新鮮的觀點為設計師提供了更多信息。觀點使設計師能夠對其他設計有永久影響去選擇做出正確的開發和營銷選擇。 \n 與客戶的協作與與其他設計師和團隊成員的協同一樣重要。 在Savvy，我們讓客戶參與其產品的整個創作過程。我們花些時間來解釋選項，並與客戶進行討論以確保我們 了解他們的想法。 \n 這使我們能夠及早獲得客戶的認可，並從明確的起點和終點開始工作。 更大的曝光量並不是什麼大驚喜，第一次沒有人知道他們正在做什麼。 \n 客戶合作意味著無需花費高昂成本、後退和不必要的會議就能更快地獲得更完整的產品。 \n 設計很容易陷入角色而忽略全局。通過更早地參與更多的人與隊友建立更緊密的聯繫並共同承擔責任， 以及對產品成功的期待。這些能夠創建一個更加開放和透明的流程以及更緊密聯繫和投入的團隊。 \n 合作是持續性的 \n 客戶向我們提出了複雜的挑戰和目標。當然不用說，我們也繼續努力與我們的客戶進行長達數月甚至數年的交流， 並積累了過去的大量知識決策，研究和其他有價值的環境。 \n 通過採用上下文優先的方法，你可以確保每個人都處於最高知識水平。 這樣，他們就可以在產品上做出最明智的決定。 為了做到這一點，在Savvy 我們通過引入所有團隊成員儘早記錄和保存會議內容， 建立一些重疊的地方讓下一個團隊成員在過程就像客戶一樣。 \n 在個案協作的基礎上，上下文也同樣重要。請遵循以下準則以保持協作中的上下文優先： \n 在顯示你的工作之前提供脈絡。如果您正在工作，你的工作是否出現在螢幕上提供信息， 你可能因為這樣失去了聽眾的注意力。 \n 你必須描述您要解決的問題或要達到的目標。 \n 介紹與當前問題相關的工作。解釋你的想法以及為什麼要這麼做的某些決定。 \n 具體說明你要反饋的內容。 \n 合作是開放、誠實和無畏的 \n 將你的工作（自己）放在協同設計並不容易。情緒會阻礙提供開放和誠實的反饋， 尤其是當你擔心會傷害他人的感受時。 \n 在Savvy這並不意味著在協同中沒有情感的位置。感覺如何在設計中很重要。 我們為有情緒在決策中有情緒的人創建一個環境。因為離開談話可能會抹消潛在的想法或解決方案。 充其量，僅提供完整圍繞事實和數據進行務實的討論是沒有的。 在最壞的情況下，它可能是誤導或提供虛假的敘述。 \n 我們的團隊還相信，不要害怕提供反饋。這意味著了解需要解決的問題以及客戶的品牌和目標。 這也意味著要問很多提問以發現相關思想或幫助指導決策。 \n 嘗試以探索性和指導性的方式提出反饋意見，以建立並改善工作而不是拆散。 \n 您的反饋意見應具有建設性。與其說你不喜歡什麼，不如說反饋以指出您要幫助解決的問題。 在以下方面提供可行的步驟改善工作，或者至少改善你的思維背後的理由。 而且不要忘記表達你喜歡什麼以及為什麼。 \n 合作不僅僅是新的想法 \n 開放並接受協作反饋是一回事，解析這些想法是另一回事並將它們用作激發自己的催化劑。 這是一項一直不斷發展起來的能力。一種實踐方法是成為更好的聽眾。 \n 通常，在與他人交談時，我們會更多地考慮接下來要說的內容比起別人在說什麼，這會影響反饋過程 尤其是在設計中，因為我們在聽到其他意見或解決方案時通常都知道自己要說什麼。 \n 當您選擇先聆聽然後再做出反應時，它可以讓您完全理解反饋 有人在解說並讓你更深入他們使用的觀點是什麼和他們來自哪裡？ 很有可能這是你在創建過程。通過聽取接受並理解反饋的上下文和推理， 正在向更多的視角，思維方式和體驗方式開放你的設計。 然後，您可以針對挑戰目標和用例測試這些新觀點。你可以設計用於它們是否更適合用戶。 \n 當所有協作者都在積極聆聽時，更容易接受反饋。 最終，提供良好反饋的技能來自學習如何獲得反饋。當我們做一個 努力成為更好的聽眾，我們也發現自己變得更加謙虛，並成為更好設計師。 \n 尋找和使用正確的設計協同工具 \n 正確的工具在增強團隊的設計協同思維方面大有幫助。 在這部分，你會了解如何找尋協同工具。我們也會根據你的經驗適合的協同工具。 \n 選擇合適的工具 \n 有效的協同工具為協同者消除了所有障礙，使他們在工作上能夠快速輕鬆地連接與互動。 這將重點放在提供反饋上。它們還允許其他人在不破壞原始設計的情況下進行協同。 \n 過去，我們使用依賴於提供基本版本控制的工具，而不是真正的協同功能。 例如，設計人員將保存一個Sketch文件並將其上傳到Dropbox。 然後，另一個團隊成員將下載它，進行處理，然後重新上傳。文件在他人的手上時沒有簡單的方法進行更改。 我們嘗試了與Github類似的方法，實踐證明，該工具非常適合管理代碼庫，但在迭代設計工作中卻不那麼重要。 不用說，這些版本控制流程使我們的協同更加耗時、令人困惑，而且不合作性。 \n 但是現在我們根據協同類型從多種更高級的工具中進行選擇並想要實現。 \n FIGMA \n 這是一個協同優先的共享工作區工具。 Figma非常適合在其中有多個人設計文件的相同區域。 你可以同時觀看成員設計或在同一設計上一起工作。 \n 優點: \n Figma減少了個人在獨自一人工作的能力 \n 無需添加不必要的修飾或創建靜態的可傳送結果實現協同。所以你無需更改工作流程即可展示設計 。 \n 它可以輕鬆地在本機環境中查看並與之互動，並隨意進行調整。 \n 何時使用：文檔編輯，高保真原設計檔，即時協同和隨時改變的客戶想法， 通過一系列螢幕的內容來解釋並獲得有關設計方向的反饋。 \n MARVEL \n 雖然Figma傾向於感覺更自由和靈活，但Marvel允許更標準化的形式合作。 這也使我們的客戶可以輕鬆地與我們合作。 \n 優點: \n Marvel是一個更簡潔，更型式和專注的空間，非常適合與非設計合作團隊成員。 \n 它剔除了客戶需帳戶的支付或為了進行工作必需深入了解工具的所有需求。 \n 客戶可以下載視窗並通過Marvel在設備環境中查看它們的運行情況。 \n 使用時間：與客戶和開發人員一起呈現更多最終設計工作。 （學習比較Marvel與其他原型工具。） \n 其他協同工具 \n Zeplin是一個有用的傳遞工具，可讓開發人員深入了解設計工作的細節。。 （我們在這裡更深入地討論Zeplin。） \n Quip是集思廣益和產品/程式文件的絕佳平台。我們用它來記錄並組織團隊成員在一個專案 工作時需要了解的所有背景和知識。對於集思廣益而不是視覺關注的新想法也很有用。 \n 請注意，還有許多其他工具可以為協作增加類似的好處， 上面列出的，該列表代表了在我們日常工作中對我們有效的協同工具，並不表示所有選項都可能對您的團隊有效。 \n Savvy的程式設計在實踐中協同 \n 現在，讓我們採用上面概述的最佳實踐和工具，並展示它們在現實生活中如何組合在一起。 我們將使用Press Play中的實時繪圖體驗來演示設計協同的重要性。這項經驗涉及到 跨學科的團隊成員數量，包括視覺設計師、UX設計人員、開發人員、產品經理，當然還有客戶。 \n 脈絡與挑戰 \n Press Play是一個抽獎活動應用程序，可保存每日，每周和每月的圖紙。用戶獲得門票觀看廣告， 然後選擇五個表情符號輸入繪圖。然後根據他們的選擇如何與圖形的隨機選擇表情符號匹配。 這個特殊的任務有我們為正在等待現場繪畫結果的用戶創造了一個有趣而激動人心的現場體驗。 \n 對於我們來說，為這種體驗創建類似遊戲的動畫非常重要。我們特別想要 在用戶去看他們的屏幕時在螢幕上喚起一種嬉戲和期待感所選表情符號與抽獎活動附圖中的表情符號匹配。 \n 就是說，我們需要注意動畫所需的複雜程度及其影響在整個產品的時間表和成本上。 我們目標是將保真度提高到合理的時間，而不會顯著影響項目的預算。 \n 協同程式 \n 階段一:設計原型與集思廣益 \n 首先，一個Savvy 的UX設計師創建了Press Play的整體用戶體驗和設計原型， 確定了需要視窗畫面和每個視窗的時間安排。她還提出了一個粗略的概念，用於實時繪圖動畫， 根據客戶的需求和項目的已建立UX。 \n 她向產品經理和視覺設計師展示了是設計原型和粗糙的動畫。 然後，這三個人都與客戶會面，因此每個人都可以直接聽到反饋。 \n 第二階段：研究與脈絡 \n Savvy的視覺設計師負責創建實際的繪圖動畫帶來吸睛的感覺， 讓Press Play產品沒有太多先入為主的知識。為了快速裝訂，他與UX設計人員和產品經理進行了深入的交談。 他還致力於其他研究有時間了解整體產品目標，挑戰並熟悉工作。 至今。如前所述，他是設計原型演示的一部分並為客戶的反饋。 \n 在這種情況下，他進行了一些與手頭任務直接相關的其他研究。 通過這樣做，他確保自己了解現場繪畫體驗的要求，目標和挑戰。 他查看了具有類似經驗和保真度的其他應用，並參考了動畫， 以了解最終動畫到底需要顯示什麼（在這種情況下，表情符號和用戶的表情符號選擇）。 在過於束縛解決方案之前，他遇到了一個精明的人iOS開發人員了解技術限制和注意事項 \n 然後，我們的視覺設計師和UX設計師集思廣益，對視覺效果至關重要。他們 同意需要為用戶建立緩慢的提示以建立懸念/期望。 \n 階段3：反覆和反饋 \n 當我們的視覺設計師沿多個不同方向工作時，他選擇了UX設計師聊聊他在Figma中的進度和設計。 通過討論工作，他們激發了更多想法和迭代， 同時確保它們符合客戶期望。還有更多他手下有很多可靠的選擇， 他再次與iOS開發人員會面，以確保一切都在從技術角度出發。 \n 階段4：客戶的反饋和發展 \n 當我們找到更多，更最終的體驗版本時，視覺設計師走了通過他們與客戶一起使用Figma。 Press Play產品經理和UX設計師還提供了反饋和指導。 \n 一旦他們都了解了引起顧客興趣的東西，視覺設計師便開始最大限度地發揮作用。 視覺效果並使它們為開發做好準備。他繼續與iOS開發人員合作，在技術層面上充分利用該概念。 \n 最終結果 \n Press Play的實時繪圖動畫是工作中設計協作的一個示例。一隊跨學科專家一起解決更大的設計和開發挑戰含義。 沒有設計協作，我們將找不到理想的交集用戶體驗，視覺和技術。 \n 當客戶在他的應用程式中看到生動的動畫時，他稱其為“開創性”。 \n 而且，這種Press Play體驗的研究，合作和創造對我們有幫助 發現產品用戶旅程中的空白。最初，現場繪畫的目的是為了娛樂 向用戶顯示結果的方式。在設計過程中，我們意識到， 如果用戶不觀看實時繪圖，他們就會迷失方向，無法體驗終結繪製的用戶旅程。 \n 基於這一發現，我們決定在其他兩個地方也改進該應用程序。我們添加了一個獲勝者圈子的結果/實時繪圖元素， 以及用戶的輸贏歷史記錄部分應用程序的細節部分。 最後，設計協作使我們得以實現這一未實現的目標需要用戶體驗。 \n 結論說明 \n 設計協同的產品和經驗需要解決建築中伴隨的複雜、關鍵問題。 通過利用多個團隊成員的專業知識跨學科的設計協作可確保團隊從各個角度應對挑戰並尋求更好的解決方案。 借助正確的思維方式、工具和流程，進行設計協同使團隊能夠通過創造性思維和迭代來更深入。 \n 我們希望本指南為您提供良好的基礎，以便您可以構建自己的有效設計協同過程。 您可以在Savvy博客上了解有關設計和產品策略的更多信息，並隨時在Savvy Apps網站上與我們聯繫以尋求幫助。 \n \n \n', 'tags': '', 'url': 'DesignCollaborationBetterProducts.html'}, {'title': 'MechanicalDesignProcess thirth segment', 'text': 'MechanicalDesignProcess \n 第 3 章 \xa0 結構注意事項 \n 在前面的章節中，我們定義了成功的設計是什麼，然後繼續確定將要在設計中放置的對象的位置。現在，我們將討論設計的結構性考慮。我覺得我們必須建立在 “ 堅實的基礎 ” 上，以便設計的其餘部分可以以此為基礎。電子外殼（本身）的結構必須堅固到足以在客戶（用戶）使用產品的各種環境中工作。因此，讓我們從討論提供產品的主要考慮因素入手。這個 “ 堅實的基礎 ” 。本章將著重於： \n \n 利用材料概念的優勢提出結構解決方案 \n 定義用於考慮電子外殼結構設計的通用過程 \n 查看一些具體說明一般概念的示例我們將在本章中最後一節標題為 “ 獎金部分 ” 。最後一部分旨在給我們在材料強度方面的問題增加一些複雜性，並展示除強度以外的其他考慮因素對於我們的設計選擇如何重要。 \n \n 3.1 簡介：材料的強度 \xa0 \n \xa0\xa0\xa0 結構注意事項對於設計的整體成功至關重要。 \xa0 讀者無需獲得機械工程學位或成為材料強度方面的專家即可從本章中受益，設計師對材料的基本強度了解得越多，外殼設計就越好。 \xa0 僅解決問題是不夠的，需要盡可能的以最具成本效益的方式解決問題 \xa0 設計適用於電子外殼的結構的分為 四個 基本方法可基本方法： \xa0 \n 1. 查看已經存在的類似產品，並使用已設計的解決方案作為手頭設計的快速起點。這種方法的優點是速度快，但是缺點是您的設計可能會因為缺乏創造力而無法解決特定產品應解決的獨特問題。 \n 2. 快速的 “ 信封背面 ” 設計。這種方法在簡化的結構元素上使用了一些基本的設計方程式。我們將在本章稍後探討這些設計方法的一些示例，以及一些示例問題。 \n 3. 更複雜的分析。在 Sect 中對此進行了更多探討。 \n 4.– 當然，過度設計 並不是所有設計的正確答案。在 競爭激烈的 產品市場中，客戶主要根據價格做出購買決定，過度設計可能會導致產品成本增加（或者肯定會增加重量和尺寸）。結構上的過度設計基本上是從一個非常有可能成功通過結構測試的設計開始的，也就是說，要在客戶使用環境中免受衝擊和振動的影響就可以通過。 \xa0 \n 過度設計原因有以下幾個： \n \n 設計能夠承受所一些力的未知的高精度。這將在 Sect 中進一步探討。 \n 設計中只有一個 “ 安全係數 ” 大於 1.0 。安全係數等於 1.0 意味著您的設計僅符合設計標準。在 Sect 中討論了增加安全係數的設計。 \n \n 3.2 結構的設計過程 \xa0 \n 我想給讀者一個通用的過程，以設計滿足設計要求的電子外殼（或外殼中的 單個零件 ）。通過完成這六個步驟，設計人員應該準備好提出可以使用的材料和橫截面。我將分別細分這六個步驟。\xa0 \n \xa0 \xa0 3.2.1 相似設計 \xa0 \n 業內其他設計如何處理相似情況？其他設計可能來自您自己公司內部的示例（過去的產品），也可能來自您自己公司外部的競爭產品。 \xa0 \n \xa0 \xa0 3.2.2 分力 \n 確定物體上的力（靜態和動態）–振幅和方向這些力量。通常不考慮零件的自重電子外殼可承受靜態力，但可以考慮使用動態力。在本文中，我指的是“對象”，“零件”和“成員”，但它們都應被視為完全是同一個人。 \n \xa0 \xa0 3.2.3 現有的最終條件 \xa0 \n 確定對象的 “ 最終條件 ” ，即其移動自由度以及如何支撐構件。常見的最終條件是 “ 固定 ” （不允許移動）或 “ 自由 ” （允許旋轉）。最終條件會影響確定負載將產生的應力大小。 \xa0 \n \xa0 \xa0 3.2.4 建議材料和橫截面 \xa0 \n 確定支撐這些材料所需的材料和橫截面組合力，請牢記“力量”屬於材料，力會在這些材料中產生應力。所有材料都有最大應力極限，我們要么開始變形或完全破壞點。 \n 基本上，只有兩種最初選擇來設計更高的承重構件 \xa0 \n \n 更換材料，從而可以更改應力極限。因此，選擇具有較高應力極限的材料可以在該構件上施加更多的載荷。 \n 更改材料的橫截面特性，基本上是構件的第二面積矩以及可以從構件的 “ 中性軸 ” 集中的面積。或質心。增大面積將實質上增加成員承載更多載荷的能力。遠離會員的 “ 中性軸 ” 增加該面積也將有助於會員承擔更多的負載（這就是 “ 工字梁 ” 的原因， “ 工字梁 ” 的許多橫截面都遠離 “ 中性軸 ” ，是出色的承載構件）。 \n \n \xa0 \xa0 \xa0 \xa0 \xa0 3.2.4.2鋁解決方案 \xa0 \n 設計就是要提出一些合理的選擇，所以讓我們看一下鋁樑。 \n 我們可以選擇， b = 4 英寸， h = 2.5 英寸。我們可以看到最大應力為 23,100 psi 。這高於鋁的最大屈服應力，因此不會造成結構變形。在我們的設計中令人非常滿意。但是要記住光束的高度是我們對慣性矩的計算 b = 2.5 英寸和 h = 4 英寸？這將是與鋁樑的先前示例。現在，最大壓力將是 14,400 psi ，完全在該鋁的最大 22,000 psi 之內。因此，“旋轉 - 相同的橫截面，其中較厚的方向是在載荷方向上力，使這種材料選擇和橫截面在結構上成功。讓我們看一下鋁樑的重量。 \xa0 169 磅 / 英尺 3 ，光束會是 47 磅。相比之下，松木為 40 磅。 \n 總之，我們研究了兩種不同的材料（松木和鋁最小）可用於解決結構問題。我們可以跨領域開發解決結構問題的每種材料的截面積。 \n 在設計中，變形通常與強度同等重要。負載構件可能具有足夠的強度以承受特定的載荷，但是它可能偏轉超出工程材料彈性的不可接受的量。撓度（以及材料的彈性模量 E ）也存在問題正在考慮中的內容將在本章中的一些示例中顯示。上述選擇的經濟性（更換物料或更換物料交叉部分）給 EPE 設計師帶來了一個有趣的問題。的許多組合材料和橫截面積可以使用，但必鬚根據實際情況進行選擇項目的總體目標。除了運作外，它還必須滿足項目的成本目標，可製造性，風險，重量，上市時間等。這些選擇將是進一步的在 ” 第 4 章 - 可能有替代解決方案需要進行審查 ” 開始進行調查，測試和製作原型。最大的資產之一設計師可以帶入設計中，以便快速找到要選擇的邏輯在可行的材料 / 橫截面選擇候選材料中做出解決眼前的問題。 \n \xa0 \xa0 3.2.5 合併功能 \n 可以將正在設計的零件與裝配中的另一個零件組合嗎在這部分附近嗎？基本上，兩個單獨的部分可以合併成一個部分？查看被合併部分的“另類思維”方面是實際上希望從一個（設想的）單個零件創建兩個單獨的零件。這可能從而降低了總體成本，降低了組合設計的解決方案。主要選擇之一將是確定如何在生產中製造該解決方案。例如，一些這裡涉及的選擇是： \n \n 該項目的工具預算是多少？該項目可以“負擔”開支嗎？鑄造，注模，擠壓或其他製造所需的資金可能正在考慮的充氣技術？是否有現有工具可以利用？必須確定找到“投資回收期”解決方案。例如，了解： \n \n 1. 加工費用 \n 2. 需要多少個零件（在產品“使用壽命”內） \n 3. 未加工零件將花費多少 \n 4. 工具零件將花費多少 \n \xa0 \xa0 3.2.6 確定所需的安全 \xa0 \n 係數此時必須複查 “ 安全係數 ” 的確定。也就是說，必須知道以下問題的答案： \xa0 \n \n 如果零件失效，是否有人受傷？生命，金錢和時間上無法預測的失敗的代價是什麼？ \n 該特定部分在產品整體功能中的重要性如何？如果這部分失敗，那麼整個產品是否會失敗？ \n 對力的了解程度如何？我們是否知道 “ 誤差線 ” ，即力會偏離假定的名義值多少？ \n 確定所選設計（材料或幾何形狀）的 “ 關鍵方面 ” ，以及如何在生產中指定，認證和檢查它們？做筆記以確保將執行這些步驟（認證 / 檢查）。確定設計各個階段所需的測試，以確保最終設計足以將其交付給生產中的客戶。 \n 將有一個優化的解決方案，通常可以通過分析設計的主要組成部分並確定設計中 “ 弱鏈接 ” 的位置來找到。這可以通過利用某些測試方法來發現，這些方法會通過超出環境限制的測試（例如高度加速的壽命測試， HALT ）而導致失敗。通過首先確定可能發生故障的位置，然後通過測試設計原型，可以生成數據來確定某些段是否接近其設計極限。 \n \n \xa0\xa0\xa0 \xa0 如果設計過程中的上述六個步驟中的任何一個都沒有一定程度的已知答案，則設計人員將面臨： \xa0 \n \n 進行進一步查詢以獲取更好的信息。 \n 進行設計。設計人員在設計過程的一開始就幾乎不了解零件的所有作用力和相互關係。當然，設計人員可以列出所做的假設以及必不可少的其他信息。當然，可以設計零件，對零件進行原型設計並在需要使用的條件下進行測試。解決 “ 在不知道所有信息的情況下進行設計 ” 這一難題的幾種方法可以被採取讓我們研究一個示例，其中： \n \n 設計 1 的重量為目標重量的 110 ％，但在結構上成功的可能性為 95 ％。設計 2 是目標重量的 100 ％，但 75 ％ \xa0 在結構上成功的機會。因此，設計 1 超出了目標重量的 10 ％，但是無法達到通過設計工作的設計目標的風險要低得多結構的觀點。因此，“折衷”是優化設計所需的時間。當然，產品必須從結構的角度進行工作。很難確定在程序開始時就在設計中“預留空間”。繼續前進在不知道所有信息的情況下進行設計的價值在於“基本設計”可以測試。希望可以迅速修改“基本設計”框架，使程序可以在獲得其餘信息時繼續運行。我們可以通過“過度設計”零件來快速前進，或者投入更多時間來“勉強”滿足所有要求。仔細研究了這兩個路徑以下更多解答： \n A. “過度設計”零件–這種方法可能保證零件會在測試中的結構功能。這裡的想法是迭代回到測試顯示出節省材料和減輕重量的地方，從而減少了保守的設計適當。這種方法至少使設計會議的機會最大化在項目測試階段的早期就對結構功能進行了要求等等。但是，設計的重量發生了變化，使這些零件更接近“ \xa0 mar- 最終成功”將需要時間（和金錢）來重新測試設計以驗證更改。大多數項目在迭代方法上的時間有限獲得“完全”設計的零件。 \n B. 設計零件時使用“僅少量”會議會花費更多時間兼顧重量和強度要求。因此，這種策略與過度設計（以上），因為零件的設計有可能（只是勉強）工作。例如，如果空間和重量減少量最大產品要求列表，該設計在“基本”上可以接受結構強度因子，但具有更大的材料和重量節省，可能是需要什麼。這種方法試圖平衡“風險和回報”與應該徵得設計團隊的同意才能前進。有了這個設計可以達到材料和重量的目標。但是，這種設計的風險不大從結構上講，工作率從 5 ％上升到 25 ％。因此“ \xa0 B ”設計路徑顯示不滿足產品結構強度要求的較高風險，但將滿足產品的重量要求。 \n C. 上述兩種方法的混合可能是合適的。也就是說，設計會比較保守，而設計的其他部分會更多有風險。這也許使“整體風險承受能力”成為整體風險的一部分。設計。經驗豐富的設計團隊將了解設計中的最佳位置“推翻接受度”。 \n 3.3 所需的分析 \xa0 \n 當然，有許多設計可以保證在電子包裝設計中進行最嚴格的分析。在任何競爭激烈的產品設計領域，將是使用給定技術進行最高生產力的公司，即將大程度地提高其成功機會。如果產品具有： \n \n 高產量。如果要生產成千上萬個特定單元，則每單位節省一美元可以帶來可觀的總節省。節省大量成本的分析會由於大量生產而帶來大量總體利潤。但是，如果只生產幾個單元，則節省的潛力就大大降低了，一旦設計被認為是可行的，在降低成本上的大量投資就不會帶來可觀的節省。 \n 由於要放置產品的環境，因此要求高度安全。例如運輸，公用事業，醫療或教育行業的產品。所有客戶都需要擁有安全操作的產品。 \n 對客戶至關重要的 “ 任務 ” 。這通常包括軍事，航天局或政府所需的產品。 \n \n 請注意，過分設計以致降低公司的盈利能力是沒有任何藉口的。設計師和工程師應該時刻警惕降低成本的可能性。零件的減少，可製造性的設計以及整體設計的優雅，導致了產品的領導地位。只有在設計的第一階段才能 最大 程度地降低成本。隨著設計甚至進入原型階段，為降低成本而重新設計的成本開始呈指數級增長。這方面的更多內容將在第一章中介紹。 \xa0 \n 另外，關於安全的注意事項也是適當的。在安全性很重要的任何領域，都不能為產品設計不足的藉口。當然，美國保險商實驗室（ UL ）和其他安全機構也會對電子設備進行安全考量認證。也就是說，安全機構將獲取產品（規格和工作單元），並對其進行審查和測試。大多數電子產品，當然是在全球範圍內銷售的產品，都必須通過嚴格的代理商批准認證。這方面的更多內容將在第一章中介紹。首要的設計考慮因素仍然是，並且將永遠是功能。即，零件必須 發揮作用 按預期。如果零件在負載下會失效，那麼它的外觀或生產的優雅程度都無關緊要。這是設計人員必須了解載荷的主要原因。 \xa0 \n \xa0\xa0\xa0 \xa0 使用有限元分析（ FEA ）的現代分析軟件解決方案非常實用無處不在。在 Google 上進行的搜索顯示了一些入門資料，例如： \n A. 有限元分析，麻省理工學院的 David Roylance 。描述三個主體步驟為： \n \n 預處理，將要分析的零件模型（其中的幾何形狀劃分為多個離散的子區域或“元素”）進行連接在離散點稱為“節點” \n 分析，將預處理器準備的數據集用作輸入線性或非線性代數方程組，用於計算應力和位移 \n 後處理，以圖形方式顯示結果，以幫助可視化。分析結果 \n \n B. 線性分析，來自 MIT 開放式課件中的 K. J. Bathe 教授，麻省理工學院。該視頻系列是全面的學習課程，介紹了有效的實體和結構線性分析的有限元程序。 \n C. 有限元分析， H 。 J. Qi 博士。將 FEA 流程描述為： \n \n 制定物理模型，即描述（也許簡化）將實際工程問題轉化為 FEA 可以解決的問題 \n 通過離散化實體，定義材料屬性來使用 FEA 模型，並應用邊界條件 \n 選擇適當的近似函數，制定線性方程，並解決這些方程 \n 以數字和視覺格式獲得結果 \n \n 3.4 結構問題：靜載荷 \xa0 \n \n 問題是可以將其視為 “ 個體 ” ，即將載荷和力施加到 單個構件 要設計的上，也可以認為是 “ 整體結構 ” ，也就是說，它可以是對整個（組裝）結構的分析。 \n 許多單個零件（或子裝配體）的供應商會在自己的文獻中提供設計指南，這些指南肯定可供單個設計師使用。以圖形或表格格式顯示的某些信息植根於基本原理，但這可能並不明顯。這種可用的 “ 供應商數據 ” 類型的一些示例是塑料，密封件， EMI 組件和軸承（僅舉幾例）的設計。 \n \n \xa0 \n 電子外殼中靜載荷是由於的構件上的 1. 構件自身的重量 2. 其他構件施加的載荷 3. 由於熱效應，殘餘應力等 \xa0 引起的載荷。由於施加力而導致以下操作失敗： \xa0 \n 1. 超出材料的屈服強度。 \n 2. 構件過度偏轉，導致構件超出設計意圖。 \n 由於所有載荷都會產生一定的撓度，因此必須在設計中的某個時刻知道允許構件產生多少撓度。 \xa0 \n 靜態載荷下的斷裂破壞在韌性材料中不如在脆性材料中常見。在延性構件中，失效通常是由於過度的非彈性作用而導致的，該過度的彈性作用導致在斷裂之前很長的整體變形。 \xa0 \n 動態負載通常是隨時間變化的負載，而靜態負載在相對較短的時間內不會發生顯著變化。電子外殼設計中常見的一些動態載荷是反复載荷，衝擊載荷和能量載荷。能量負荷是指在撞擊期間傳輸的能量（比作用力）更容易表達的負荷。 \xa0 \n 重複載荷造成的斷裂通常稱為 “ 疲勞 ” 故障。振動可能會導致疲勞失效。 \xa0 以下三個問題通常涵蓋以下主題： \xa0 \n 1. 什麼是光束（相對於平板）？ \n 2. 應力公式和最大應力。 \n 3. 撓度公式和最大撓度。 \n 4. 截面模量。 \n 5. 彈性模量。 \n 6. 結束條件。 \n 7. 負載條件。 \n 8. 最壞的情況下加載。 \n 9. 組合加載。 \xa0 \n \n \xa0 \xa0 3.4.1 懸臂梁分析 \xa0 \n 本節重要性在於強調了橫向剪應力對最大應力的影響。在確定樑的最大應力時，除非用盡所有可能產生最大主應力的彎曲應力和剪切應力組合，否則不要對結果感到滿意。通常，剪切圖和彎矩圖的構造以及彎曲應力和橫向剪切應力的數量級比較將大大簡化問題。 \xa0 \n 使用梁應力公式，我們將繼續解決電子外殼設計人員可能面臨的問題的 “ 主推力 ” 。那就是確定 “ 蓋板 ” 到外殼底盤的（最大）緊固件距離。這種類型的問題涉及沿外殼提供的環境密封 \xa0 \n \n 防止灰塵，濕氣和蒸汽 \n 足夠的 EMI 屏蔽 \n \n 我們將在第 4 章中解決問題的屏蔽部分。現在，我們將解決設計基本密封設計幾何形狀方面的 “ 結構性問題 ” ，以保持足夠的強度以提供防潮密封。環境密封問題的結構考慮： \xa0 \n A. 密封材料： “ 產品環境（密封） ” \n B. 蓋板和底盤材料：此處涵蓋的彈性模量 \n C. 此處覆蓋的截面積（需要慣性矩） \n D. 此處覆蓋的螺栓間距 \n E. 此處覆蓋的壓縮擋塊 \xa0\xa0 \n \xa0 \n 關於方程式（和答案）的其他一些觀察結果是： \xa0 \n 1. 我們發現，鋼製外殼的螺栓間距大於鋁製外殼的螺栓間距 – 這意味著較硬的材料將允許較少的撓曲。 \n 2. 我們看到螺栓間距隨著厚度的三次方而變化 – 我們期望方程式（用於螺栓間距）可能基於 “ 梁 ” 的慣性矩，從而得出厚度的 “ 立方體函數 ” 。 \n 3. 我們希望螺栓間距是 “ 1 ⁄ 4 功率 ” 的函數，這是梁在其長度上具有均勻載荷的撓曲的通用方程，該樑的撓度是其長度到四次冪的函數。對於載荷均勻的梁，相同的一般方程式也將根據其材料彈性模量（ E ）向 1 ⁄ 4 屈光力（ 3 1 ⁄ 4 = 1.3 ，即 78.5 / 60 ）偏轉。 \xa0 \n 因此，作為設計者，我們首先要估算對於鋁製外殼設計。顯然，我們可以在設計中對此間距進行原型設計，並在盡可能真實的條件下進行測試。值得注意的是，我們還假設了墊圈密封區域的橫截面面積以及墊圈在以下方面的厚度變化： \xa0 \n A. 未壓縮狀態（在擰緊緊固件之前）。 \n B. 壓縮狀態（在擰緊緊固件以在設計中設置 “ 止動件 ” 之後，即，緊固件附近的設計特徵專門限制了墊圈的使用範圍） \xa0 \n 被過度壓縮。所有墊圈都要求這些 “ 止動 ” 以使緊固件具有指定的壓縮極限。我們還可以查看類似的設計，其中防護等級（空氣或水）與我們設計的水平相匹配。如果我們發現本身設計的尺寸適用於這些設計，則可以我們一些信心，我們當然有成功的機會，還應當指出的是 的因素之一， 整體 設計將有的 最低 緊固件量。因此，緊固件之間的 5.0 英寸的距離會比 4.0 更好英寸的距離（從而節省了緊固件並節省了擰緊這些緊固件的工作量）。但是， 4.0 英寸的間距將增加墊圈設計在不屬於一部分的附加載荷下密封的可能性。計算（例如衝擊或熱），從而為設計提供一定的安全裕度。 \xa0 \n \xa0 \xa0 3.4.2 撓度公式和最大撓度 \xa0 \n \xa0 \xa0 我們知道在 “ 無肋 ” 結構上增加肋骨將增加該結構處理更多載荷的能力。通常，可以通過在 “ 常規 ” 壁厚上增加厚度來增加強度，例如： \xa0 \n σ = Mc / I \xa0 ，其中： \xa0 \n σ= 所考慮構件的應力 \n M = 該構件的最大力矩（通常是力乘以 “\xa0 距離 “ ，即是 ” 的距離 “ 從力到所述構件的部分） \n I / C = Z ，這是所考慮的部分的性質，也稱為從中性軸截面模量 \n C = 距離成員到 “ 外部纖維 ” 的 \n I = 成員的慣性矩（大約質心）成員因此，要增加的承載能力，您可以：增加 I 和 / 或減少 c （增加 Z ）。在 I 為矩形（長方形是用於製造的構件的共同選擇）其中 \xa0 b = 的長度矩形的底邊， h 是矩形的 厚度 。請注意，，增加厚度（ h 由於 “ 平方函數 ” ）具有很大的影響。因此，將厚度加倍實際上使光束強度提高四倍。上述說來，加倍厚度將增加構件的重量。對於重量敏感型設計而言，這可能是 “ 災難 ” 。但是，通過添加肋骨，肋骨是厚度的 “ 間斷性 ” 添加，強度顯著提高（而重量僅少量增加）。為什麼是這樣？ \n 儘管肋骨會增加板的總慣性矩，但對於短肋骨，從中性軸到橫截面（ c ）的極端纖維的距離會更快地增加。對於間距較大的肋骨，此效果最為明顯。 \n \xa0 \xa0 3.4.3 另一個撓曲問題，這次是卡扣鉤 \n \xa0\xa0\xa0 \xa0 這裡的想法是，鉤在連接操作過程中短暫偏轉，並卡入底切以完成配合操作。 \xa0 \n 選擇了以下介紹性問題： \xa0 \n A. 顯示了一種通用的緊固方法（用於塑料）。 \n B. 顯示了使用材料共同強度的公式，該公式利用了材料的彈性特性，在設計中將撓度用作優點，並優化了橫截面積和均勻應變。 \n C. 介紹了使用塑料材料進行設計的某些方面。 \n D. 利用供應商提供的文獻資料（在本例中為 Mobay Plastics ）。代替使用第一性原理解決一些更複雜（至今）的問題，使用列表選項和列線圖可以大大減少所需的設計時間。 \xa0 \n 3.5 動態載荷 \xa0 \n 電子機櫃中構件的動態載荷是由於載荷以非穩態方式承受在構件上的。它們包括但不限於： \xa0 \n A. 具有振幅和頻率的振動載荷（包括風力或與地震地面運動相關的慣性力） \n B. 離散衝擊載荷在這些振動和衝擊載荷情況下，將探討一些問題。 \n 章節摘要 在本章中，介紹了有關外殼結構方面的一些基本考慮。我們可以通過為這些外部船體提供材料來開始這種設計。同樣，我們的設計處置將是選擇船體的橫截面。這些橫截面和材料的最佳選擇是利用易於獲得的材料方程式的強度來進行的。但是，在各種解決方案中都需要做出選擇，並且要確定最佳設計，不僅要單獨考慮結構，還需要更多考慮。 \xa0 \n 此外，我們還介紹了一種用於設計電子外殼結構的通用過程。首先要看先前的設計，確定結構上的力，然後繼續確定設計中的安全因素。 \xa0 \n 參考文獻 \xa0: \n \n Roark RJ, Young WC (1975) Formulas for stress and strain. McGraw-Hill Book Co., New York \n Byars EF, Snyder RD (1969) Engineering mechanics of deformable bodies. International \n \n Textbook Co., Scranton \n \n Design guide to the selection and application of EMI shielding materials. TECKNIT, EMI \n \n Shielding Products (1991) \n \n Injection Molding magazine, May 1998 issue, R. Cramer of Dow Materials Engineering Center \n \n', 'tags': '', 'url': 'MechanicalDesignProcess thirth segment.html'}, {'title': 'MechanicalDesignProcess first segment', 'text': '第1章成功的設計 \n 1.1\xa0 設計指南 \n \n 設計指南 \n \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0 \xa0 助於擴大設計師過去的全部經驗以及他們現在的組織的建立流程。 \n \n 電子產品外殼（ EPE = 電子產品外殼） \n \n \xa0\xa0\xa0\xa0\xa0\xa0 \xa0 由內部和外部結構組成產品的要素。 \n \n EPE 設計師 \x9e \n \n \xa0理解並符合產品規格的能力。\x9e 能夠添加並幫助創建產品規格。\x9e 為產品提出的問題創建創造性的解決方案。 \n 1.2\xa0 定義整體團隊 \n 團隊可以是：\x9e \n ．小型或大型。\x9e \n ． 位於一個位置或分佈在全球。\x9e \n ． 資源有限或可以訪問幾乎無限的資源。\x9e \n ． 是否擁有最新工具。\x9e \n ． 出於各種原因而實現目標的動機。\x9e \n ． 經驗豐富。 \n \xa0 \xa0 \u3000整個工程包含著多個學科之間的設計融合。例如：軟件和硬體工程、機械工程（包括結構和熱學）、系統工程 … 。 \n \u3000\u3000因此，知道機械工程只是電子產品整體工程設計的一部分，並且許多決策是與其他學科合作而成的。這些都是為了強調機械設計不是“憑空”完成，而是作為團隊共同努力的結果。 \n 1.3\xa0 產品要求 \n \n 產品將為客戶帶來什麼成就。 \n 說明產品如何與客戶互動。 \n 產品各組件的描述。 \n 展示產品的最終外觀。 \n 產品將在運行中和放置的環境，包括：溫度、衝擊、跌落、振動、濕度…。 \n 產品需要通過測試達到所有標準。包括安全和法規標準，例如：安全性保險商實驗室（ UL ）、電動勢電磁干擾（ EMI ）…。 \n \n 1.3.1規範功能 \n \n 最少的輸入。 \n 完整規格。 \n 工作規範。 \n \n 1.3.2準時按計劃進行 \n 1.3.3交貨的預計成本 \n \n 修改完成項目所需的人力資源。 \n 完成的項目所需資源被修改。 \n 修訂產品的預期銷售成本。 \n \n 1.4 草繪與細節 \n \u3000\u3000 EPE 設計人員必須知道何時在以下兩種模式之間切換： \n \n 草繪或集思廣益： 快速思考產品如何設計，同時獲得他人的反饋更改選擇。規模並不是很重要，速度才是這裡的重點。 \n 詳圖： 在“詳細模式”下，可以準確計算出設計中的一些關鍵部分 \n \n 1.5 設計評論 \n \u3000\u3000正式的設計評審通常是按照項目時間表上的計劃進行。 \n \u3000\u3000非正式的設計評審是偶爾或自發進行的。就像設計師去辦公室並要求同事“看看”、在設計師認為足夠接近設計問題或已有經驗的少數人中召開簡短會議。 \n 1.6 溝通 \n \u3000\u3000 溝通是設計成功的必要條件。這句話本身是正確的，但值得進行更充分的討論。 \n 1.6.1溝通目的 \n \u3000\u3000交流的目的是傳達有關設計的信息。 \n 1.6.2溝通的價值 \n \u3000\u3000良好的溝通將使項目更加成功。 \n 1.6.3通信鏈中的連接 \n \u3000\u3000交流的目標之一是將信息提供給需要的人，團隊包括很多學科。 EPE 設計師應在團隊中涉及所有人員做出決定，這些人對於做出決定非常重要。 \n 1.7 工程經濟 \n \u3000\u3000不論工程經濟學的基本原理，就不可能完成設計。幾乎所有的工作中，“付出什麼代價”都是最重要的考慮因素。在許多產品設計中，它將成為此產品成功或失敗的主要原因之一。 \n 章節總結 \n \u3000\u3000介紹如何將設計視為“成功”，以及設計如何滿足產品要求。 \n \xa0 參考文件 \n \n Thuesen HG, Fabrycky WJ, Thuesen GJ. Engineering Economy, 1971, Prentice-Hall \n \n', 'tags': '', 'url': 'MechanicalDesignProcess first segment.html'}, {'title': 'assignment3', 'text': '', 'tags': '', 'url': 'assignment3.html'}, {'title': 'MSModelingAndTFApproach', 'text': "第一章 介紹 \n \u3000\u3000在過去的幾十年中，我們在電子技術方面所取得的進步和小型化已使工程師能夠採用新產品和新工程學科。在十八世紀初，我們已經看到了結合機械零件和電子零件的新產品的推出。機電一體化應用蓬勃發展的另一個因素是電子零件的價格不斷下降，以及設計超小型系統的挑戰。如今，例如具有高性能的微處理器變得非常便宜，這鼓勵了它們在計算機控制系統中的使用。 \n \u3000 \n 1-1機械零件設計 \n \u3000\u3000機械部分是機電系統中的基本部分。在該部分的階段設計中，我們將構思和製造組成機電一體化系統的部分。還選擇用於該機電系統的致動器和傳感器。致動器和傳感器的機械部分的設計或選擇都是通過遵循將在本卷的下一章介紹的一些設計規則來完成的。同樣重要的是要記住，機電系統一旦循環使用就成為過時的觀點，這是我們在設計階段必須考慮的重要事項。在設計階段，也應考慮出於維護或其他目的而對系統進行的組裝和拆卸。 \n 1-2電子電路設計 \n \u3000\u3000在電子部分，工程師必須設計電路，以確保機電一體化系統的功能。它涵蓋了所需的電子部件的集成，例如電阻器，電容器，集成電路以及所選的微控制器或微控制器。不同組件所需的穩壓電壓也是該步驟的一部分。電子電路的主要部分是微控制器或一組微控制器。在本卷中，我們決定使用一種類型的單片機，它是Microchip製造的dsPIC30F4011。我們沒有給出任何正當的理由，但我們的願望是採用一個微控制器來處理本卷將要介紹的所有示例。因為我們將對所有示例使用相同的結構，所以該選擇還將使讀者容易實現實時實現。 \n 1-3適時實施 \n \u3000\u3000在控制部分，工程師必須分析正在研究的系統，並設計適當的控制器以獲得所需的性能。在分析部分，我們應該從建立一個可接受的模型開始，該模型給出輸入與輸出之間的關係。一旦掌握了動態特性，便會選擇一個採樣週期，並將模型轉換為離散時間形式，然後可以從經典比例積分和微分（PID）控制器，狀態反饋控制器或任何其他可以提供給控制器的控制器中選擇一個合適的控制器。 \n 1-4本書的構造 \n \u3000\u3000在傳遞函數方法部分中，將連續時間系統模型轉換為離散時間系統，並建立了不同的分析技術，並綜合了控制器，以確保達到預期的性能。 \n \u3000\u3000在狀態空間方法部分，將連續時間系統的模型轉換為離散時間狀態空間表示，並開發了用於控制器分析和合成的不同技術，以確保開發出所需的性能。 \n \xa0 第二章 機電一體化系統 \n 2-1機電一體化 \n \u3000\u3000一體化可以定義為涉及產品設計的跨學科工程，其功能依賴於通過控制方案連接的機械，電氣和電子組件的集成。 \n \u3000\u3000如今，機電一體化一詞已享譽全球，許多機電一體化系統都設計用於個人或商業用途。我們日常生活中使用的所有小工具實際上都是機電一體化系統。作為這些小工具的示例，我們提到了使用許多機電一體化系統的筆記本電腦和汽車。 \n 2-2機械零件 \n \u3000\u3000機械部分代表了我們正在嘗試設計的機電系統中的主要組件，它可以由現有組件製造或製造。 \n \u3000\u3000在本部分的階段設計中，應更加註意以下幾點： \n \n 價格 \n 形狀 \n 重量 \n 尺寸 \n \n \u3000\u3000注意機電一體化系統的運行環境也很重要。這將幫助我們選擇合適的材料來製造機械零件。機電系統的維護也是一個關鍵點，這就是為什麼我們在設計階段要注意系統所有關鍵部分的可訪問性。在這一階段，考慮到所有機電系統的回收將無濟於事，因為我們將無法尊重我們為新一代保護的環境，這一點也很重要。 \n 2-3傳感器 \n \u3000\u3000傳感器是每個機電系統的關鍵點。從某種意義上說，系統的眼睛可以用來檢測所有類型的變化並採取適當的措施。傳感器可以看作是將物理現象，位置，速度，加速度，溫度，流量等轉換為易於測量或處理的電信號的設備。傳感器由換能器和信號調節單元組成。如今，對於某些現象，存在許多可用於感測它們的傳感器，這使得選擇變得非常困難。即使是對於現場經驗豐富的人員，選擇合適的傳感器始終是一項艱鉅的任務。 \n 2-4執行器 \n \u3000\u3000致動器被定義為將某種功率（例如液壓或電力）轉換為線性或旋轉運動的設備。它們代表了手臂軟機電系統。 \n \u3000\u3000實際上，使用了不同類型的執行器，其中包括： \n \n 電動執行器 \n 液壓執行器 \n 和氣動執行器 \n \n \u3000\u3000一種電動執行器，可以將電能轉換為線性的旋轉運動。它們用於對機電一體化系統的機械部分進行定位或賦予其速度。 \n \u3000\u3000除了便宜和簡單之外，直流電動機還易於控制速度，位置和扭矩。儘管它們的同系交流電動機通常在速度控制方面很昂貴，但在低速運行時表現出一些不穩定，並且自身的定位控制也很差。 \n \u3000\u3000電動執行器通常是精確而靈活的。它們是精確定位機械零件或在需要時迅速發展力量的理想之選。它們的主要缺點是在其運行過程中需要使用帶電的冷卻系統。對它們進行良好設計和良好保護後，其維護工作將減少至滑動觸點或換向器的變化。如果未安裝保護裝置，大負載可能會燒毀電動執行器的繞組。 \n 步進電機更適合控制不需要反饋的機械零件。這些類型的執行器通常用於開環控制和機械零件的定位。為此，發送一定數量的脈衝這些執行器用於激光打印機，傳真機和大多數計算機設備。 \n 2.5電子電路 \n \xa0 \xa0 電子電路是機電一體化系統的大腦。 重新組合被動和集成電路旁的有源元件。 它的作用是管理和協調以所需的方式確定組成系統的所有組件的功能。 無源元件包括電阻器和電容器，而有源元件可以是執行所需功能的簡單二極管或晶體管或任何集成電路任務。 \n 2.6實時實施 \n \xa0\xa0 下一步就是簽署我們應該執行的控制算法以確保系統將正確執行其設計任務。 這樣的設計算法分為兩個步驟。 第一個步驟包括建立數學模型-正確描述輸入與輸入之間的關係的模型系統的輸出。 第二步，固定期望的性能，使用適當的技術設計控制器。 \n 2.8結論 \n \xa0\xa0\xa0 機電一體化系統的不同組成部分我們提供了一些機電一體化系統，我們將在這裡使用它們來展示概念。 \n \n 第三章 數學建模 \n 3.1基於物理定律的數學建模 \n \xa0\xa0\xa0 為了說明如何應用此技術，讓我們考慮一定數量的動力系統。我們希望在速度或位置上控制的負載。 \n 3.1.1傳遞函數的概念 \n 如果我們使用初始條件等於零的拉普拉斯變換，我們將得到： \n \n 結合這些關係和定義之間的傳遞函數速度Ω（ s ）和電壓 U （ s ），我們得到： \n \n 如果電樞電感 Lm 可以忽略，則傳遞函數變為： \n \n \n 3.1.2狀態空間描述 \n 現在，如果讓 x1 （ t ） = i （ t ）， x2 （ t ） = ω（ t ）和 y （ t ） = x2 （ t ），我們得到： \n \n 給出以下標準形式： \n \n 系統的這種數學形式在文獻中稱為狀態空間表示。 \n 3.2識別 \n \xa0\xa0\xa0 從前面的示例中可以看出，我們可以用於分析和設計的數學模型並非易事，甚至如果我們可以從物理定律中獲得模型，則不同參數的值該模型可能無法獲得，因此分析模型毫無用處。 \n \xa0\xa0\xa0 系統識別是一個過程，通過該過程數學描述從測試數據中提取動態系統。 識別的目的是構造一個算法，該算法將允許根據觀察到的結果建立數學模型數據。 \n 3.3結論\xa0 \xa0 \xa0\xa0\xa0 \n 在本章中，介紹了動力學系統的數學建模。 並提出了使用物理定律生成模型的技術。並且需要實驗數據來建立所需的模型。 \n \xa03.4 問題 \n 1. 在這個問題上，我們要求為直流電動機套件建立數學模型不忽略 L 。我們要求建立： （一）傳遞函數 （二）狀態空間描述 \n 2. 建立兩輪機器人的數學模型 \n 3. 建立懸浮系統的數學模型 \n 4. 考慮一個具有傳遞函數的動力學系統。 寫 Matlab 程序，該程序生成一個數據序列（ u （ k ）， y （ k ））。 使用這個數據，在 Matlab 中編寫程序以識別系統並建立數學模型。 比較兩個模型並得出結論。 \n 5. 在狀態空間描述中考慮動力系統。 編寫 Matlab 程序圖生成適當的數據以使用狀態空間標識系統描述方法。 使用這些數據編寫一個 Matlab 程序來建立一個狀態空間描述，並將其與原始描述進行比較。 \n \n 第四章 \n 4.1 導言 \n 現在的單片機功能比較強大，價格也比較實惠。所以大部分的人會選則它。 \n \xa0 \n 4 4. \n 基於轉移函數分析的機電一體化系統。在開 / 關機的情況下，它用於安全和控制的目的。一般情況下不需要花時間就能計算出脈衝發生器的作用。而對於連續時間的情況，微控制器會重新在每個取樣期接收數據 。 \n 在實際使用微控制器控制實際過程時，有以下結構可以採用。 \n 透過輸出通過 A/D 轉換為數字值。轉換器的輸出是通過 A/D 轉換為數字值。在這種情況下，參考是以數字形式送入。 \n 這種結構用以下方式說明 \n 圖 4.1 和 4.2 。 \n \xa0 \n 在圖 \xa0 4.2 \xa0 的結構中，我們的採樣信號具有以下特徵 \n 有以下優點。 \n 1. 易於調製 \n 2. 易於編碼 \n 3. 易傳輸、易再生並有積極意義。 \n \xa0 \n 4.2. 取樣過程 \n 在本章的其餘部分，我們將介紹可用於分析的工具。 \n 這種類型的系統。主要是針對一個給定的實際系統。 \n 1. 如何確定採樣週期 \n 2. 如何將連續時間模型轉換為離散時間模型，使用所選的 \n 抽樣期 \n 3. 如何確定這類系統的性能，如穩定性、穩定性、穩定性等。 \n 過衝、沉澱時間等。 \n 4. 如何利用根 - 焦點和 Bode-plot 技術進行離散時間的案例分析。 \n 連續時間和離散時間之間的關係建立。 \n 主要是：兩個域（ s 域和 S 域）的兩極之間的關係已經建立。 \n 第 3 節介紹了傳遞函數的概念和極點的概念。 \n 在第 4 節中，對給定輸入的時間響應進行了開發，並給出了一個給定輸入的時間響應和 \n 第 5 節介紹了計算它的方法。第 5 節介紹了穩定性問題和系統誤差。根定位和博德圖技術的發展再在第 6 和 7 節中具體介紹了這些技術。這些技術被用於分析和設計。 \n \xa04.2 取樣過程 \n 採樣期的選擇採用香農定理。這香農定理的聲明由以下結果給出。 \n 4.2.1 \n 定理 4.2.1 \xa0 信號 y(t) 不含頻率成分大於 fh 是由一組間隔為單一的 y(t) 取樣集唯一地重構出來適當的 \n 採樣頻率的選擇應滿足： \n \xa0 採樣器的作用是將連續時間信號轉換為等效的連續時間信號。 \n 脈衝序列，而 ZOH 阻斷了從採樣器接收到的值，從而使讀取這些數據的微控制器通過模擬 / 數字轉換器。 \n 採樣過程如圖 4.3 所示 \n \n 反向 Z 變換包括找到與 f(k) 相關的表達式。 sponds to a given function F(z). \xa0 是一個非常有用的方法是找到反轉函數的函數 F(z) 的擴展為部分分數， \n 其逆變換為可以在表中找到。這種方法的思路是，首先寫出了 expres- \n z-1 的函數，然後執行擴展為部分分數 \n 如同通常對連續時間的情況下所做的那樣。這種技術可以從以下幾個方面來說明 \n 以下為例：範例 4.2.7 讓我們考慮以下函數 F(z) \n \n 並確定 f （ k ）的表達式。 \n \xa0 採樣系統的傳遞函數的概念可以類似地定義為已經為連續時間。 \n 為了澄清這一點，讓我們參考圖 4.10 ，其中上游採樣器是真實的，而下游採樣器是虛構的。 \n 我們假定在同一採樣期同步的理想值。採樣期間，我們假設為理想值，並在同一採樣期同步。 \n 第二個採樣器被引入，目的是定義 Y(z) ，因此，定義 \n 適當的脈衝傳遞函數。根據圖 4.10 ，我們可以得到 : \n \xa0 \n 因為輸出是由虛構的採樣器採樣，所以我們可以有 \n \n \n 第二種數值積分方法：積分的近似值 等於圖4.8的面積之一 按照之前相同的步驟，使用圖4.8，我們得到： 依次給出z域: 從中我們有： 像之前一樣再次比較兩個傳遞函數，我們得到以下轉換： 第三種數值積分方法：在前面的兩個模式中，我們有低估或高估曲線的面積。另一種替代包括計算這兩種方法的平均值。現在參考圖4.9所示，我們得到以下積分的近似值： 圖中所示區域的面積。 從這個表達式中我們得到： 現在使用F（z）的表達式，我們得到： 最後 像之前一樣進行以下轉換： 範例4.2.14考慮以下傳遞函數： 我們的目標是看到我們將使用極點的轉換的效果系統的。首先，讓我們確定採樣週期。由於我們有一個二階，我們有： 給出wb = wn，並且採樣週期的適當選擇如下： 為此，讓我們使用之前的變換計算極點 該系統： 使用s = z-1/ T，相應的傳遞函數為： 系統在z平面中的極點為：z1,2 = 0.9338±0.1987 j 使用s = z-1/ Tz，相應的傳遞函數為： 系統在z平面中的極點為：z1,2 = 0.9064±0.1689 j 使用s = (2 /T)(z−1 /z + 1)，相應的傳遞函數為： 系統在z平面中的極點為：z1,2 = 0.9182±0.1845 j 使用變換s = 1 T ln z（z = eT s），極點為0.9175±0.1847 j。 從該示例可以看出，梯形近似為 因為它給出幾乎相同的極點，所以它更接近於精確變換。的 其他近似值則得出不同的結果。因此穩定性和精度 在選擇特定方法之前應先進行測試。 作為可用於近似傳遞函數的另一種方法 Z-域在文獻中始終被稱為極點/零點 轉型。它包括執行以下步驟： G（s）的所有極點都對應於z = e-sT。也就是說，如果s = −a，則是極點 在s域中，則G（z）在z域中的z = e-aT處有一個極點 對G（s）的零做同樣的事情 將與s =∞相對應的G（s）的所有極點置於z = -1處。這表示 將（z + 1），（z + 1）2，···加到G（z）的分子上，使得 分子將等於分母之一。 使G（s）的增益與G（z）之一相對應。這意味著我們必須 為此，請執行以下操作： [G(s)]s=0 = [G(z)]z=1 範例4.2.15在說明這個過程是如何工作的，我們考慮以下內容 轉換功能： G(s) = 10/(s + 1)(s + 2). 該傳遞函數的極點為s1 = -1和s2 = -2。 他們對應 極點分別是z1 = e^T和z2 = e^-2T。 如果我們將採樣週期固定為 T = 0.02s，則這些極點變為z1 = 0.9802和z2 = 0.9608。 由於分母為度2，因此分子也應為度 2.為此，我們將分子（z +1）2添加到分子。 然後通過以下公式計算增益： 最後，Z域中的傳遞函數由下式給出： 作為另一種方法，可以從G（s）= N(s) / D(s)導出G（z，當D（s）有不同的根源。 可以使用以下公式進行計算： 範例4.2.16展示如何從帶有分母的G（s）中獲得G（z）的想法 具有不同的根源，我們考慮以下傳遞函數： \n 該傳遞函數的分母和分子由下式給出： D（s）=（s + a）（s + b） N（s）= 1 關於s的分母導數由給出： D'（s）= 2s +（a + b） 在兩個根上的導數的值是： D'（x1 = -a）= b-a D'（x2 = -b）=-（b-a） 使用這個和前面的公式，我們得到： 4.3傳遞函數概念 採樣系統的傳遞函數的概念可以類似地定義 已經做過連續時間了。 為了澄清這一點，讓我們參考圖4.10 上游採樣器是真實的，而下游採樣器是虛擬的 我們假設是理想的，並且在相同的採樣週期內保持同步。 的 引入第二個採樣器是為了定義Y（z），從而定義 正確的脈衝傳遞功能。 根據圖4.10，我們得到： 由於輸出是由虛擬採樣器採樣的，因此我們可以得到： 如果我們應用Z變換，則可以獲得： Y（z）= G（z）U（z） 從時域開始可以很好地證明這種關係。 在 事實上，我們有： 現在使用卷積定理，我們得到： 從另一面我們知道你（σ）可以寫成： 使用此，y（t）的表達式變為： 現在使用採樣信號y的Z變換的定義（t）我們有： 執行變量m = k − l的更改，我們得到： 可以重寫如下： 最後，傳遞函數由下式給出： 這是輸出的Z變換與輸出的Z變換之間的比率輸入。在操作採樣系統的框圖時，應格外小心。以下關係將有助於此目的。 例4.3.1在本例中，我們考慮圖4.11的系統。以理想的採樣器串行發送兩個系統。 兩者的表達傳遞函數是： 我們的目標是為該系統計算等效傳遞函數。 根據此圖，我們得到： 這使： 這又意味著： 使用Z -transform表，我們有： \n 例4.3.2在本例中，我們考慮重新採樣的情況。在兩個傳遞函數之間串行移動。 這種情況說明如下圖4.12。 傳遞函數G1（s）和G2（s）由下式給出表達： 其中a為正標量。 我們的目標是計算等效傳遞函數並將其與在前面的示例中獲得的一個。 在這種情況下，我們有： 依次給出 重要的是要注意，我們為此獲得的等效傳遞函數 這種情況與我們從上一個示例的系統獲得的情況不同。 使用G1(s)和G2(s)的表達式，我們得到： 根據Z -transform表，我們有： 例4.3.3在本例中，我們考慮具有轉移功能的情況。反饋中的內容，我們將按照與在先前的例子。 該系統如圖4.13所示。 傳遞函數由以下表達式給出： 根據此圖，我們可以： 依次給出： 由此我們得到： 這提供了以下脈衝傳遞函數： 從Z -transform表中，我們得到： 使用此我們可以獲得： 例4.3.4作為前一種情況的第二個例子，讓我們考慮一下系統圖4.14。 問題是如何計算脈衝傳遞函數 該系統的 F（z）= Y（z）/ G（z）。 由於（請參閱表Z -transform） 對於閉環脈衝傳遞函數，我們得到以下表達式： 例4.3.5在本例中，圖4.15所示的系統為零使用訂單保持（ZOH）。 1.找到開環和閉環脈衝傳遞函數Y（z） / U（z） 2.如果K = 1且T = 0.1，則找到單位階躍響應 此示例的解決方案可以輕鬆獲得。 實際上，我們有： 開環： 從中我們有： 最後我們得到： 閉環： 使用z1 = 1和z2 = 1-KT的殘差法，以及 \n K = 1，我們發現： k倒k = 0、1、2、3，··· 如果使用T = 0.1s，則得到： 示例4.3.6讓我們考慮圖4.16的系統併計算轉移功能。使用此圖，我們可以： 依次給出： 使用Z變換，我們獲得： 例4.3.7讓我們考慮圖4.17的系統併計算轉移 功能。 圖4.17反饋中的傳遞函數 使用此圖，我們可以： 依次給出： 現在使用Z變換，我們得到： 示例4.3.8讓我們考慮框圖的動態系統 如圖4.18所示 例4.3.9讓我們考慮圖4.19的框圖系統 併計算傳遞函數 例4.3.10讓我們考慮圖4.20的框圖系統 併計算傳遞函數 圖4.20反饋中的傳遞函數 使用此圖，我們可以： 依次給出： 現在使用Z變換，我們得到： 根據這些示例，我們始終能夠計算出該系統及其表達方式如下： 其中Y（z）和U（z）分別是輸出Y（s）和Z的Z變換輸入U（s）。此傳遞函數始終採用以下形式： 其中ai和bi是實數標量，n是一個整數，表示整數的階數系統。 多項式N（z）和D（z）的根，即以下項的解等式： \n 分別稱為系統的零點和極點。極點在系統響應中起重要作用。他們的位置非常 重要，它與系統性能（例如穩定性，瞬態）有關 政權等）。 例4.3.11讓我們考慮一個具有以下轉移的動力系統 功能： 計算系統的極點和零點並將它們繪製在z域中。 根據傳遞函數的表達式，我們有： \n 多項式的根對零為0.1±0.1 j，對於零為2和0.2±0.4 j 兩極。零都在單位圓內。複雜的兩極也在裡面 單位圓，而實際圓在該圓之外。 我們介紹了傳遞函數的概念，並且學習瞭如何 操作框圖。現在是時候計算傳感器的時間響應了。 給定信號輸入的系統。這是下一部分的主題。 \n 4.4時間響應及其計算 \n 通常，控制系統必須保證某些性能，例如： •穩定時間為給定百分比 •過衝 •阻尼比 •等 對於時間定義，我們要求讀者看一下圖4.21。有一個想法 關於穩定時間，過衝等的概念，讓我們考慮線性時間 輸入r（t）和輸出y（t）的不變系統。如果我們在 輸入，該系統的輸出將如圖4.21所示。從這個數字來看， 可以看到建立時間定義為系統響應時間， y（t）達到誤差帶（由一定百分比，2％，5％等定義） 並在其餘時間停留。百分比越低，沉降時間越長 時間會。 過衝是給定係統時間響應的另一個特徵。 如果我們參考上圖，則超調定義為最大超出 系統輸出的穩態值。通常，我們使用百分比 過衝，定義為輸出的最大值減去步長值 除以步長值。 錯誤也是輸出行為的另一個特徵。它被定義為 輸出所獲得的穩定值與期望值之間的差。為一個 具有統一反饋的閉環系統，通過數學定義誤差E（z） 如：E（z）= R（z）-Y（z） 其中R（z）是參考輸入，Y（z）是輸出。 以前，我們開發了可用於計算表達式的工具 給定信號的時間。在這裡，我們將使用它來計算給定的時間響應 系統選擇的輸入可能是以下信號之一或組合： •狄拉克的衝動 • 步 •坡道 圖4.21步進輸入的時間響應行為 為了計算時間響應，讓我們考慮一個具有脈衝傳輸的系統 給定輸入信號U（z）的函數G（z），並考慮計算 y（kT）的表達式。 該系統如圖4.22所示。 這個數字可能代表 發送了開環脈衝傳遞函數或其等效的閉環脈衝 簡化系統框圖後得到的傳遞函數。 從這個數字，我們得到： Y（z）= G（z）U（z） 時間響應y（kT）的計算被引入到 可以使用以下方法之一確定Z逆變換： •擴展為部分分數 •多項式除法 •殘留法 為了說明時間響應如何，讓我們考慮以下示例。 例4.4.1在本例中，我們考慮直流電動機驅動的速度控制 通過齒輪給定的機械負載。我們假設系統是使用 微控制器。系統的傳遞函數由下式給出： 其中K = 2和τ= 2該系統被認為是開環的。在這種情況下，由於我們存在 ZOH，我們獲得： 使用Z -transform表，我們得到： 其中T是採樣週期。對於我們的系統，由於時間常數等於2秒，因此對於 採樣週期為T = 0.2sec。使用這個，我們得到： 如果現在我們認為信號輸入是單位步長，我們得到 要計算時間響應，我們可以使用表格或繼續進行擴展為部分分數。 \n 使用Z -transform表，我們可以： 通過擴展為部分分數，我們得到： 由此我們得到： 現在使用Z -transform表，我們得到： 因為e-0.1 = 0.9048。 例4.4.2在本例中，我們考慮直流電動機驅動器的位置控制。 通過齒輪給定的機械負載。我們假設系統是受控的 使用微控制器。系統的傳遞函數由下式給出： 其中K = 2和τ= 2 該系統被認為是開環的。在這種情況下，由於我們存在 ZOH，我們獲得： 使用T = 0.2秒的Z轉換錶，我們得到： 如果現在我們認為信號輸入是單位步長，我們得到 要計算時間響應，我們可以使用Z -transform表或繼續用膨脹成部分餾分的方法或用殘渣的方法。 使用Z -transform表，我們得到： 通過將方法擴展為部分分數，我們可以： \n 用殘基的方法，我們得到： 在極點z = 1和z = 0.9048處。 這些殘基計算如下： •極點z上的殘差= 1 •極點z上的殘差= 0.9048 現在使用該表，我們得到： 因為e-0.1 = 0.9048。 從上一節中計算出的時間響應可以看出對於給定的系統，對於給定的信號，輸出可以取有限值或無限值信號輸入。問題是為什麼會這樣。給出了這個問題的答案通過穩定性分析，這將在下一部分中介紹。 4.5穩定性和穩態誤差 \n 對於連續時間域中的系統，穩定性意味著所有極點必須具有負實部。 在變換z = eT s的情況下，T是採樣期間，我們看到s域的左半平面對應於內部單元4.5。 穩定性和穩態誤差109圓，因此，如果所有極點都在這個單位圓內為了分析離散時間系統的穩定性，讓我們考慮離散時間系統的穩定性。圖4.23。 該系統的閉環傳遞函數由下式給出： 其中R（z）和Y（z）分別是輸入和輸出。系統的極點是以下特徵方程的解： 1 + C（z）G（z）= 0 穩定性研究需要計算這些根。 對於小訂單系統中，我們總是可以手動求解特徵方程，然後獲得極點和穩定性結論將基於極點所在的事實得出位於。 對於高階，不建議使用此方法，而替代方法是需要。 已經開發了一些標準來研究穩定性。 在這些當中我們引用的標準是陪審團之一和Raible。 例4.5.1讓我們考慮一個具有以下特徵方程的動力系統： 特徵方程的根為：z = 1/2和z = 1/4。 這些根是位於單位圓內，因此系統穩定。例4.5.2讓我們考慮一個具有以下特徵的動力系統： tic方程： 系統的根為z1,2 = 1±j(1/2)並且都在單位圓之外表示系統不穩定。研究離散時間系統穩定性的直接方法是將其轉換到等效的連續時間，然後使用Routh-Hurwitz的準則。 這個想法是找到一個合適的應用程序來映射單位圓的內部到左側的半平面上。 然後，我們可以應用Routh-Hurwitz準則。 我們正在尋找的轉變是： 在特徵方程中用該表達式代替z將得到一個新的，在w中，我們可以應用Routh-Hurwitz的準則。 例4.5.3為了展示我們如何使用勞斯·赫維茲準則，讓我們考慮具有以下特徵方程的動力學系統： 可以看出極點為2和0.2±0.4 j。 因此系統是不穩定。 可以採用以下形式： Routh-Hurwitz的條件包括填寫下表： 在第一列的基礎上，我們可以看到符號因此系統不穩定。 這證實了我們已經評論過的結果較早。 同樣重要的是要注意w中特徵方程的根是由： w1 = 0.3333 w2,3 = −0.5000±0.5000 j 這些根也可以使用w =z−1/z+1從z域中的根獲得 應用雙線性變換可得出： 依次給出： 應用Routh-Hurwitz可以得出： \n 為了保證穩定性，我們應該確定參數K的範圍這樣我們就不會在第一欄中更改標誌。 對於w^0行，我們應該擁有0, i.e. K > 1/6.32 = 0.158.。 對於w^2行，我們還應該2.736 − 6.32K> 0，即K <2.736/6.32 = 0.4329。 如果我們看這兩個條件，我們結論是系統對於0.158 <K <0.4349是穩定的。 為了檢查這一點，讓我們考慮在間隔內的K = 0.2。 使用這個值，我們得到以下特徵方程式： 其根為z1 = 0.052 + j0.6044和z2 = 0.052-j0.6044。 根是位於單位圓的內部，因此系統穩定。 對於K = 1，我們獲得： 根是z1 = -0.076和z2 = -4.876。 然後系統不穩定，因為| z2 | > 1。 對於離散時間，陪審團已經制定了一個標準，該標准給出了關於任何不求解特徵方程的系統。 展示這種方法工作時，讓我們考慮以下具有實係數的特徵多項式： Jury的穩定性標準包括建立以下一系列係數： Jury 的陣列係數計算如下： P（z）描述的系統穩定的充要條件是： 例子4.5.5檢查以下描述的系統的穩定性多項式： 我們形成 Jury 的係數數組： 由於n = 3，因此應滿足以下條件： •P（1）必須為正：1 + 3.3 + 3 + 0.8 = 8.1> 0為真 •P（−1）必須為負，因為n = 3 =奇數：-1 + 3.3-3 + 0.8 = 0.1> 0這是錯誤的 一個錯誤的條件足以得出系統不穩定的結論。 例4.5.6讓我們考慮一個具有以下特徵方程的動力系統： 其中K是確定參數以使系統穩定的參數。此特徵方程式可重寫如下： 應用Jury標準可得出： 因此，如果K∈] 0，2.8 [，我們的系統將是穩定的。 例如，如果我們將K固定為2， 給出以下特徵方程式： 根是z1,2 = -0.3000±0.5568 j，由於| z1,2 |而在單位圓內 <1。 \n Raible提出了另一個研究穩定性基礎的標準。 這個站技能標準還包括陪審團標準，即先填充數組，然後再填充關於穩定性的結論。 為了展示此標準的工作原理，讓我們考慮以下因素特徵方程： 其中ai是真正的標量。 重複這些過程，直到數組獲得2n +1行。 最後一行僅包含一個數字。Raible的穩定性標準當a0> 0時，且僅當且僅當多項式的根都在單位圓內a（i）0> 0，i = 0，1，···，n − 1 係數a（i）0> 0，i = 0，1，···，n − 1出現在Raible的數組中。 備註4.5.1假設a0> 0不是限制性的。 實際上，當a0 <0時，足以改變多項式P（z）的所有係數的正負號以獲得-P（z），依次用於Raible的標準。 該過程是正確的，因為P（z）和-P（z）的根相同。 例4.5.7為了說明Raible準則是如何工作的，讓我們考慮以下特徵方程式： 係數a0必須為正，然後形成多項式 我們提出了一些技術來研究離散時間系統的穩定性tems。 同樣重要的是要注意，我們也可以在頻域。 \n 4.6根軌跡技術 \n 根軌跡技術是一種強大的方法，通常用於連續時間或離散時間系統進行分析或設計。 該技術給出了關於增益或更大時閉環動力學的極點行為的想法（a參數或更多）。 直接結論是我們知道，會如何影響系統的穩定性和其他性能參數更改。 如今，有許多工具可以繪製任何動力學系統的根基因座其中一些可免費使用。 在本節的其餘部分，我們將使用Matlab進行繪製，但我們將製定規則，以獲取如何獲取根軌蹟的草圖如果我們手邊沒有電腦。對於連續情況，離散系統的根軌跡描述為我們以以下形式編寫的特徵方程式： 1 + KG(z) = 0 其中K是變化的參數， 其中z1，z2，... n是極點，n1，n2，... nm是開環的零點轉換功能。 當參數K從0變為無窮大（∞）時。 與我們使用的規則相同用於在s平面上繪製連續時間系統的根軌跡到z平面上離散時間系統之一的繪圖，除了結果的解釋主要在穩定性方面有所不同。 從特徵方程式，我們得到以下條件： 第一個條件稱為幅度條件，而第二個條件稱為幅度條件稱為角度條件。 Z平面上滿足這兩個條件的任何點條件屬於系統的根源。 至此對應一個增益z0 如果這點是z0，那麼我們有：其中θ0是該點的對應角度。如果滿足上述兩個條件，則z平面的點將屬於根軌跡。位置。通常，除非給定係統的確切根源圖，否則這是一項艱鉅的任務，除非我們有相應的工具。通常，此根軌蹟的草圖可以是 使用一些簡單的規則即可輕鬆獲得。其中一些規則是： 1.分支的數量等於系統的階數，即：n; 2.根軌跡相對於實軸對稱。這是由於事實特徵方程的根是實數還是複數。而如果有一個複雜的根，我們自動得到它的共軛。 3.軌跡起源於開環傳遞函數的兩極，並且終端-在this傳遞函數的零上展開。解釋為什麼基因座起源從極點，我們可以使K等於零，而為什麼基因座終止於 零可以通過讓K在等式中變為∞來解釋。 （4.4）。 4.漸近線的數目等於兩者之間的差極點n和開環傳遞函數的零個數m。這些漸近線的特徵是： 參數δ給出漸近線與實軸的交點，βk給出使每個漸近線與實軸成的角度。 5.對於根軌蹟的斷點，首先我們確定變化的參數K，即： 斷點是以下方程式的解： 從這個方程的根中選擇那些可行的解決方案很重要對於斷點。 6.虛軸在z平面上的交點可以通過以下方式確定在特性方程式中用jν替換z並編寫如下： 依次給出兩個方程式： 解給出相交發生的頻率和相應的收益。 7.從復雜極點出發的角度或到復雜點的到達角度使用角度條件計算零。 如果我們要 計算角度為z0，條件角度變為： 例4.6.1為了說明根軌跡技術是如何工作的，讓我們考慮圖4.24的系統，其中工廠是雙積分器和控制器是一個增益為K的比例動作，我們假設它在零之間變化和無窮大是由於某些物理原因，例如加熱，老化等。使用Z變換錶和閉環傳遞的表達式函數，我們得到該系統的以下特徵方程： \n 根軌跡如圖4.25所示。 所有根都在單位圓之外藍色。 系統不穩定。 這意味著比例控制器不能穩定雙積分器。 例4.6.2作為根軌跡技術的第二個例子，讓我們考慮圖4.26的系統。 根軌跡如圖4.27所示。 所有的根都在單位圓內藍色。 因此，系統對於所有增益k <8.65都是穩定的。 4.7波特圖技術 \n 頻率響應在天線的分析和設計中起著重要作用。連續時間和離散時間系統。 時間響應，頻率 響應包括通過正弦輸入激勵系統。 在連續-時間系統，事實證明，對於正弦輸入，穩定輸出線性系統是正弦曲線，輸入頻率相同，其幅值和輸出的相位是該頻率的函數。 對於離散時間系統，輸出也是正弦波，頻率與輸入信號和相位相同並且幅度仍然是該頻率的函數。 為了說明這一點，讓我們考慮具有以下傳遞函數的穩定線性系統： \n 令輸入r（t）具有以下表達式： r（t）= sin（wt） 其中w是輸入頻率。 此處的幅度等於1。該信號的Z變換由下式給出（請參見Z變換錶）： 現在，如果我們認為系統被相應輸出的R（z）激勵，Y（z）由下式給出： \n 4.8結論 \n 本章介紹基於傳遞函數概念的分析工具。主要是，我們開發瞭如何計算時間響應和確定係統性能。 我們還介紹了根軌跡和波特圖技術。 \n 第五章 基於傳遞函數的設計 \n 5.1引言 \n 解決控制設計問題始終是一個挑戰，即使對於更有經驗的人也是如此控制工程師。必須為其設計控制器的系統可以是現有的，但表現不佳，我們想改進，或者我們正在構建的新系統。在這兩種情況下，設計程序均在通過定義所需的性能來獲得系統的數學模型這將使我們能夠確定控制器的結構及其參數。通常，控制系統旨在保證某些性能考慮到系統的閉環動力學。這樣的表演可以歸納為瞬態和穩態的穩定性和行為國家政權。通過尊重給定係統的局限性，它始終是我們試圖通過尋求折衷來改善瞬態狀態的情況在系統可能出現的超調和其速度之間。為了穩定狀態，我們進行搜索以確保誤差小於某個選定的公差。我們將在本章中考慮以響應設計要求的控制器-是經典的，例如比例，積分和微分作用，他們的近似值。本章的其餘部分安排如下。在第2節中，控制設計問題已製定。第三部分介紹了設計經典的經驗方法控制器。在第4節中，使用根軌跡設計經典控制器方法被開發出來。第5節介紹了Bode方法。第6節介紹了一個案例研究包括為直流電動機套件設計不同的控制器。 \n \xa0 \n 5.2控制設計問題的表述 \n 在本章中，我們將考慮性能較差的現有系統，我們想改善。我們的願望是對瞬態同時採取行動通過在閉環中引入控制器來強制整個系統按預期運行。可以在時域或頻域中給出性能。同時領域，穩定性是設計過程中的首要要求。在旁邊 \n 穩定性，我們希望瞬態和穩態機制能夠在理想的方式。在瞬態狀態的時域中，我們應控製過衝，所選時間的上升時間和穩定時間將取決於我們希望為我們的系統保證精度。對於穩態制度，我們希望確保系統的錯誤小於特定的指定值。 \n 在頻域中，除了性能根據閉環動力學的穩定性，增益相位和通常來說，很難在兩者之間建立聯繫時域和頻域的性能。更具體地說，所研究的系統由傳遞函數描述，例如可以使用識別方法獲得。讓我們用G（s）表示這個傳遞函數。必須在控制的第一階段確定此模型設計。然後，根據控制工程師的性能和專業知識進行設計我們可以選擇可以正確響應設計的控制器結構目標。然後，使用適當的方法，我們可以確定控制器的增益。 \n 因此，控制設計問題包括確定： \n \n 控制器的結構 \n 及其參數 \n \n 使用所需的性能和一些啟發式方法來強制關閉-所選控制器的動態迴路表現出理想的表現。 這種方法由於被忽略的不同現象，在實踐中可能需要改進動力學。 \n 我們將在本章中考慮的控制器是經典的控制器， \n 在文獻中被認為是比例（P），積分（I）和微分（D）動作及其近似也稱為相位滯後超前和相位超前滯後。 控制器的傳遞函數將表示為C（z）。 確定控制器後，相應的差分方程為使用適當的微控制器實時獲取和實現。 對於有關此主題的更多詳細信息，我們請讀者參考實現部分詳細。 \n 由於系統性能通常是連續不斷地給出的，因為這樣做更自然。設計步驟可以在 \n 連續時間或離散時間。一般來說，設計方法使用以下步驟： \n \n 表演轉換成桿子 \n 選擇所需控制器的結構 \n 使用所需的極點確定控制器參數 \n 對控制器的參數進行了一些調整以補償 \n \n 預期行為與實際行為之間可能存在差異設計過程中未考慮的系統零。重要的是要注意，控制器參數的確定可以在連續時間或離散時間完成。在連續時間內在這種情況下，確定控制器參數，然後控制器進行將fer函數轉換為離散時域，得到差分方程我們應該實時實施。對於離散時間，差分方程為直接獲得併實施。 \n 設計方法可以是以下方法之一： \n \n 基於經驗方法的設計 \n 基於根軌跡法的設計 \n 基於波特圖法的設計 \n \n 在本章的其餘部分，我們將介紹這些方法並給出一些示例展示這些技術如何應用於實際系統。 仿真結果將是用來表明其有效性。 控制器的設計是連續進行的然後獲得相應的控制器離散時間版本。 的本章使用在Boukas中開發的方法。 \n 5.3基於經驗方法的設計 \n 實證方法基於齊格勒-尼科爾斯的工作。這些方法與其他方法相比，具有優勢，因為它們允許設計除即使在沒有系統數學模型的情況下，也可以找到所需的控制器。Ziegler-Nichols方法主要基於動力學系統的響應。Ziegler-Nichols提出了使用時間響應的方法，其他使用時間響應的方法。頻率響應。在本節的其餘部分，我們將介紹這些方法。首先讓我們集中討論時間響應方法。在這些方法中我們可以處理開環穩定和不穩定的系統。第一種方法考慮在原點無極點也不佔優勢的穩定係統的情況複雜的兩極。在這種情況下，階躍響應由圖5.1中的給出。從中直接確定參數T，τ和k以及Tab。其中k是系統的增益，τ是上升時間，T是延遲時間。 \n 5.4基於根軌蹟的設計 \n 根源技術是控制系統分析和設計的強大工具。tems。 在本節中，我們將使用它來設計控制器，以確保理想的表演。 該系統的模型應該以 \n 轉換功能。根軌跡技術可用於設計經典控制器。 的該方法背後的技術包括選擇使座位穿過表演中給定的極點。 \n 其中k，-zi和-pi分別是系統的增益，零和極點。首先讓我們集中討論比例控制器的設計。 \n 其中KP是要確定的控制器的增益。基本控製過程中可以知道，比例控制器的作用是同時考慮了瞬態和穩態機制，但其能力有限。它可以減少錯誤，但絕不會使其等於零。計算控制器的增益，我們將使用以下過程 \n 1.計算閉環動力學的特徵方程，即：1 + KpG（s）令K = kKp \n 2.畫出從0到無窮大的K的根軌跡 \n 3.確定基因座和對應於所需的阻尼比ξ（cosθ=ξ）並得到主導的極點對。 讓SD成為具有虛構積極部分的人。 \n 4.計算得出極點sd的增益K \n", 'tags': '', 'url': 'MSModelingAndTFApproach.html'}, {'title': 'MechaFutureAndChallenges', 'text': '\n \n \n \n \n \n \n \n \n \n 2.5 機器人 \n \xa0\xa0\xa0 與上述高端系統幾乎相反，機器人技術領域也影響機電一體化領域。在這裡，需要計算機科學領域來應對 非結構化 和 不斷變化的環境 。在機器人技術方面，開發主要針對視覺、地圖和本地化，因此不僅要了解環境（“世界建模”），還要了解人工智能（AI）領域，這已經是數十年的承諾，但在未來可能會迅速發展。未來幾年。由於即將推出的自動駕駛汽車，這兩個領域目前都處於加速階段。在動力總成（即電力傳動和變速箱）領域以及計算機科學的應用（例如現代汽車中的傳感器）領域，汽車行業的破壞是巨大的，包括實現的自主功能的迅速發展在乘用車和商用車中。 \n \xa0 \n \xa0\xa0\xa0 實際上，這一切都與機電一體化、人工智能、控制有關，機器人技術領域（包括自動駕駛汽車）可以被視為機電一體化領域之外的一個單獨的研究領域，但是例如，工業機器人的速度要求或外科機器人（例如下圖的Preceyes機器人）的精度要求必須包括在內。機器人動態行為的描述。從剛體建模到柔性系統的轉變，直接使其成為機電一體化的核心。系統工程思想和系統拓撲優化也是如此，在車輛的混合動力系統中也是如此。那麼機電一體化在哪裡結束而機器人技術在哪裡開始呢？ \n \xa0 \n The Preceyes eye surgery robot \n 2.6網絡物理系統，智能產業和物聯網 \n \xa0\xa0\xa0 從分散式機電一體化系統向聯網系統的轉變被稱為網絡物理系統領域，指的是控制論領域。 研究的問題是如何在數據包（信息）丟失期間或之後保證穩定性和性能，以及如何處理可變延遲。該領域甚至離機電一體化的硬件還很遠，但是發展如此之快，以至於我們應該問一個問題，即如何在遠程狀態監視和服務領域中將網絡控制系統的潛力納入其中。在接下來的十年中，物聯網（IoT）的爆炸式增長進一步要求找到該問題的答案。 \n \xa0 \n \xa0\xa0\xa0 機電一體化將滿足物聯網的一個應用是我們製造業的未來。 工業4.0或智能工業的關注點是關於聯網的現代工業自動化。 \n \xa0 \n \n 如果共享物流知識，優化一個工作站的性能作為整個物流或運營的一部分，如果生產設施中的服務和維修可靠，則對於通過製造工廠的貨物流意味著什麼？工作站是否靈活並且可以適應？ \n \n \xa0 \n \n 這對工業機器人和智能機電一體化生產設備意味著什麼？ \n \n \xa0 \n \n 這將如何影響我們的機電設備和產品的設計要求？ \n \n \xa0 \n \xa0\xa0 \xa0 物聯網不僅會改變現代化的工廠。  據估計，到2020年，將有500億台設備連接到互聯網。 這意味著它將進入我們的家庭、家用設備以及汽車。 當可穿戴電子設備被進一步推動時，我們被傳感器所包圍，我們只需要朝致動一步就可以閉合迴路並進入機電一體化的世界。 \n \xa0 \n 2.7走向系統集成 \n \xa0\xa0\xa0 監督這些發展，我們可能會質疑機電一體化到底是什麼或將是什麼。機電一體化是否受到干擾？它已經蒸發到系統工程中了嗎，它是否是支持學科的一部分，它是否擴大成為網絡物理的中堅力量？而且，如果生物系統也將具有如果實施了技術設備（人類互聯網），那麼機電一體化學科的作用是什麼？我們應該如何在機電一體化思維方面對人們進行教育？在圖2.6中，使用系統工程的作用來實現學科和技術貢獻的必要整合。 \n \xa0 \n \xa0\xa0\xa0 在本書中，許多提到的發展將得到解決。我們不會對機電一體化的未來及其教育有確切的答案，但是我們也知道，由於我們無法預測未來，因此它應該是強大且適應性強的！我們肯定知道技術發展的步伐正在加快，因此，我們也應該如此！ \n \n Fig. 2.6  系統工程學科與技術的整合 \n \xa0 \n 參考文獻 \n \n Munnig Schmidt R, Schitter G, van Eijk J (2011) The design of high performance mechatron- \n \n ics. Delft University Press, The Netherlands \n \xa0 \n \n Silvas E, Hofman T, Serebrenik A, Steinbuch M (2015) Functional and cost-based automatic \n \n generator for hybrid vehicles topologies. IEEE/ASME Trans Mechatron 20(4):1561–1572 \n \n Butler H (2011) Position control in lithographic equipment: an enabler for current-day chip \n \n manufacturing. IEEE Control Syst Mag 31(5):28–47 \n \n Steinbuch M, Pahnke K, High Tech Systems Centre. Eindhoven University of Technology. \n \n https://www.tue.nl/en/research/research-areas/high-tech-systems/ \n \n Meenink HCM (2011) Vitreo-retinal eye surgery robot: sustainable precision. PhD thesis, \n \n Eindhoven University of Technology \n \n Bradley D, Russell D, Ferguson I, Isaacs J, MacLeod A, White R (2015) The internet of \n \n things—the future or the end of mechatronics. Mechatronics 27:57–74 \n \xa0 \n 第3章 \n 機電一體化的未來挑戰 \n 3.1引言 \n \xa0\xa0\xa0 在航空航天工業中，掌握機電一體化系統的設計是一項主要要求。確實，程序成本的很大一部分花在了這些系統的設計上，這也代表了產品性能的很大一部分。 在本章中，我們將揭露工業界在機電一體化領域未來幾年將面臨的一些主要挑戰。 這些挑戰涉及設計機電一體化系統，其驗證/確認及其操作。 \n \xa0 \n 3.2設計中的挑戰-架構和規模 \n 3.2.1 使用模型確定體系結構的大小 \n 嵌入式技術系統的物理體系結構，例如圖3.1a的飛行控制系統的機電執行器或圖3.2b的供電網絡的電力電子模塊，是來自不同技術的組件的組合，Van der Auweraer等人的工作和Hehenberger等。強調了這樣的多域系統的設計需要不同的建模層，如圖3.2所示： \n \n 圖 3-1 嵌入式系統的多域架構 \n \n 圖 3-2 嵌入式系統的多域架構 \n \n 機電一體化層必須考慮組件之間的功能和物理耦合。 通常使用0D / 1D模型（也稱為集總參數模型）完成此級別的建模，以代數方程，常微分方程（ODE）或微分代數方程（DAE）表示。 \n \n \xa0 \n \n 基於幾何表示，在上一層中需要一個特定的域層來描述性能極限和參數。特定域現象通常通過偏微分方程（PDE）表示。對於這種水平的建模，可以使用解析模型來簡化幾何，或者對於復雜的2D和3D幾何，例如通過使用數值逼近法（例如有限元方法（FEM））來實現。 \n \n \xa0 \n \xa0\xa0\xa0 從系統集成商的角度出發，功率元件的設計應允許通過多種相互作用的技術來優化組件的尺寸和規格。這種與組件設計不同的系統級設計，需要在機電一體化層中使用專用模型來表示特定領域層的關鍵信息。Budinger等人將其稱為“估計模型”，使設計人員能夠輕鬆地採用多個模型。設計約束。模型圖3.1嵌入式系統的多域體系結構圖3.2分層設計模型（在Hehenberger等人之後）直接且明確地將一些主要特徵（例如組件的總體尺寸）與尺寸確定所需的次要特徵聯繫起來 和優化。 這些估計模型所需的能力如下： \n \xa0 \n \n 提出易於處理並在不同計算工具中實施的表格。 \n \n \xa0 \n \n 使自己易於進行分析操作。 \n \n \xa0 \n \n 可在與最初使用它們的區域稍有不同的區域中重複使用。 \n \n \xa0 \n \xa0\xa0\xa0 為了滿足這些約束，通常使用簡化的分析模型。其中，比例定律已被證明可以有效地代表大範圍變化中的物理現象。但是，這些模型僅在特定條件下有效，其中可以提到幾何形狀，材料相似性和行駛物理現象的唯一性。對於系統設計人員而言，模型應盡可能具有預測性。詳細的有限元模型可以準確預測在這種情況下，物理現象仍然很耗時。儘管最近有工作在減少模型階數上，但在初步設計階段，有限元模型的計算成本仍然很高。因此，為此目的使用元建模技術很有趣。機電設計的挑戰是從集成者的角度開發專門用於選擇系統組件的元建模技術。 Budinger等人的論文。提出了一種基於縮放定律的元建模方法，該定律從局部數值模擬（FEM）中提取估計模型的簡單全局表達式。 \n \xa0 \n \xa0 \n \xa0 \n \xa0 \n \xa0 \n \xa0 \n 3.2.2 機電一體化設計學科系統篇 \n \xa0\xa0\xa0 圖3.1中系統的設計受到以下主要方面的驅動，以滿足各種要求：機身與驅動負載之間的集成（質量，幾何包絡），對環境的抵抗力（熱和振動），瞬時功率和節能，動態性能，使用壽命，可靠性，對故障的耐受性或耐受性。 表3.1總結了這些不同的設計觀點以及基於模型的設計可能的關聯建模級別。 \n \xa0\xa0\xa0 優化此類系統時，這些多種設計觀點產生了真正的挑戰。為了在同一循環中考慮這些標準，來自多學科設計優化（MDO）的工具可能會有用。MDO是工程領域，它使用統計和優化方法來解決包含2D / 3D FEM代表的所有相關學科的設計問題同時進行0D / 1D模擬和代數計算。每個特定的計算都被視為一個黑匣子，可以直接調用它，並通過實驗設計（DoE）進行分析。所有計算都可以鏈接在一起，並用於設計探索，靈敏度，優化和穩健性分析； iSight， Optimus和ModelCenter是此類框架的示例。 \n \xa0\xa0\xa0 優化任務需要較少的模型計算時間。替代模型或元模型是另一種模型的簡化或近似描述模型，可以用於表示機電一體化層中的特定領域層模型（FEM）。機電一體化層通常在時域中處理動態系統，並使用瞬態時間仿真，但是在設計優化期間，依靠評估負載曲線的主要諧波來近似時域行為的方法可能很有吸引力。 \n \xa0\xa0\xa0 這些優化和統計支持工具允許以自由選擇的順序鏈接設計過程的步驟。但是，它們在選擇如何構造計算中的連接或將哪些參數作為設計參數，約束或目標考慮在內時沒有提供幫助。 \n \n 表 3.1 \n \xa0\xa0\xa0 基於知識的工程（KBE）是一門結合了基於知識的方法和計算機輔助設計的學科，對設計支持也很有用。KBE軟件包專用於集中特定產品設計的所有知識和專長。 這些環境中使用的科學概念和方法如下： \n \xa0 \n \n 知識庫和計算機輔助設計：使用非定向的代數方程式（聲明性方法）來充分利用組件的知識（這些方法可以很容易地組合起來以描述不同的體系結構）。 \n \n \xa0 \n \n 約束網絡，圖論和優化：以聲明形式最初定義的一組方程式經過定向，以便獲得可用於優化算法的計算程序。 \n \n \xa0 \n \xa0\xa0\xa0 可以通過符號計算，間隔計算或人工智能來支持對等式的適應或分析。這些KBE工具可以是： \n \xa0 \n \n 鏈接到Genus Designer中的CAD軟件，該軟件捕獲配置規則並為Solidworks執行過程自動化。 \n \n \xa0 \n \n 如Enventive中所述，專門用於平面機構的概念設計（優化，公差，靈敏度分析）； \n 開發了多個領域，例如FST研究所軟件（TUHH大學），該軟件在相同的基礎上支持飛機升力機構，液壓網絡和EMA的初步設計； \n 常規，例如TKSolver，Ascend，Cades，Design 43或PaceLab套件，並且通常是聲明性語言，可以實現一組根據設計目標，代數方程可與不同的輸入配合使用。 \n \n \xa0 \n \xa0\xa0\xa0 這些工具可以為設計人員提供有趣而重要的幫助，尤其是當系統由於多種技術而變得複雜時。結合MDO工具和專用的元建模技術，它們可能代表機電一體化系統設計的未來。 \n \xa0 \n 3.2.3 綜合最佳架構的能力 \n \xa0\xa0\xa0 在設計機電一體化系統時，可以在體系結構級別設想許多解決方案。選擇最合適的體系結構的任務是一項複雜的任務，目前主要通過手動定義，評估和比較設想的體系結構來完成。在體系結構級別使用設計綜合和優化技術可以使設計人員設想更廣泛的解決方案，其中包括潛在的創新解決方案，並在形式上進行比較（使用定義明確的指標），以選擇合適的解決方案。最合適的一個。 \n \xa0 \n \xa0\xa0\xa0 工程設計綜合[23]是一套技術，可基於對人工製品的目的，其預期特性和設計知識（明確形式化或提取的）的知識，對工程人工製品（2D / 3D形狀，建築等）進行綜合。優化技術會迭代地修改一些初始解決方案（通常是隨機生成的），以優化測試解決方案的特性，但是，他們很少考慮設計知識來生成可行的解決方案。 \n \xa0 \n \xa0\xa0\xa0 耦合設計綜合和優化可以生成可行的解決方案，並找到性能最佳的解決方案。由於探索的設計空間可能更大並且該過程不受認知偏見（例如信念）的影響，因此它通常比手動過程更有效。但是，這需要能夠評估任何生成的解決方案以及所有定義的選擇標準（優化目標/約束）。這種類型技術的使用示例是機器人手臂[24]，真空吸塵器[25]或飛機駕駛艙[26]的設計。 \n \xa0 \n 3.2.4 機電一體化的安全性和可用性研究系統篇 \n \xa0\xa0\xa0 可靠性，可用性，可維護性和安全性（RAMS）標准通常是在設計過程中進行的研究的一部分。為了針對這些標準（可靠性，可用性，可維護性等）量化不同體系結構的性能，必須對每種考慮的替代方案進行大量此類研究。 \n \xa0\xa0\xa0 目前，這些研究由建立機電系統RAMS模型並對其進行分析以得出結論的專家進行。RAMS模型通常使用專門的形式來構建，例如Petri網，貝葉斯網絡，可靠性框圖或更高級的語言，例如Altarica [27]和Figaro [28]。 \n \xa0\xa0\xa0 為了加快研究速度，將RAMS研究與（描述性或行為）體系結構模型聯繫起來將是一個優勢。實際上，RAMS研究期間可以重用設計模型中嵌入的許多信息。 \n \xa0\xa0\xa0 第一種方法考慮使用RAMS數據（故障模式，可靠性比率等）豐富設計模型，以便能夠自動生成RAMS模型。例如，SysML [29]模型（具有特定配置文件）可用於自動計算系統級故障率[30]。 \n \xa0\xa0\xa0 另一種方法考慮將設計模型鏈接到RAMS模型，以確保RAMS模型的一致性。在MODRIO項目[31]的框架中，開發了一個原型，以從Modelica [32]模型和Figaro知識庫[33]自動生成Figaro模型。使用Modelica特定的構造從知識庫和其他必要信息中聲明與Figaro塊的對應關係。 \n 3.2.5 產品的功能虛擬表示 \n \xa0\xa0\xa0 機電系統的設計和集成是一個多學科的設計過程，需要多個領域進行協作和交換信息。在當今的大型公司和擴展型企業中，掌握這些信息流對於提高設計階段的效率至關重要。 \n \xa0\xa0\xa0 改善團隊之間溝通的一種方法是共享集成了所有觀點的產品的通用虛擬表示。這種表示方式使不同的團隊可以查看其他團隊的約束，並始終可以訪問設計的最新版本。此外，它還可以在仿真過程中考慮來自其他領域的影響。 \n \xa0\xa0\xa0 綜合觀點還可以為決策提供更堅實的基礎，因為它可以了解所有相關學科的所有限制和目標。 \n \xa0\xa0\xa0 這種表示形式的主要技術推動因素是能夠在使用不同工具和數據格式的不同團隊之間交換工程數據，以及能夠集成來自不同學科的模型的能力。 \n 3.3驗證和驗證中的挑戰 \n 3.3.1 虛擬驗證系統的能力 \n \xa0\xa0\xa0 機電一體化系統的驗證對工業界（尤其是在航空航天業中）是一項非常昂貴的任務。確實，這既需要係統可用，又需要開發和製造測試平台，而這些測試平台通常無法在程序之間重複使用。降低測試成本的一種方法是虛擬測試。該實踐旨在開發虛擬手段（系統模型和系統仿真環境）來測試系統並驗證其是否符合要求。例如，實際機翼上的測試可以用有限元模型代替。 \n \xa0\xa0\xa0 虛擬測試的主要好處是成本，因為虛擬測試台的成本通常比實際測試台低得多，並且通常可以從一個程序重用到另一個程序。實際上，每個程序的許多系統都是相似的，並且它們的模型通常可以通過有限的努力就可以適應新的設計。 \n \xa0\xa0\xa0 不太明顯的好處是，虛擬測試台可以在比系統在其生命週期中遇到的實際刺激更近的條件下刺激系統。例如，在機翼彎曲測試中，將載荷局部施加在實際的試驗台上，而載荷則可以均勻地施加在虛擬的試驗台上，從而以更準確的方式表示實際載荷。在系統模型中，某些方面（例如熱效應）也可以更輕鬆地考慮到，而如果需要進行實際測試，則它們需要非常昂貴的測試手段。 \n \xa0\xa0\xa0 要啟用虛擬測試，必須很好地管理驗證過程的多個方面。首先，當然必須對模型及其仿真環境進行驗證。這可以通過將結果與測試台數據或飛行測試數據進行比較來完成。在這方面，需要模型校準和不確定性管理技術。 \n 3.3.2 正式向模型供應商發出模型請求 \n \xa0\xa0\xa0 模型越來越多地用於在系統上執行驗證和確認（V＆V）活動。這些模型通常由系統的供應商（內部或外部客戶）設計。但是，在功能，有效性範圍，精度等方面能夠陳述模型期望的內容仍然是一個挑戰。實際上，請求者對總體仿真環境（即其他交互模型，仿真輸入等）具有很少的看法，而很少以正式的方式傳達給模型開發者。在將預期模型實際提供給模型請求者之前，這通常會導致多次迭代。 \n \xa0\xa0\xa0 最近，模型身份證被提出作為模型要求的標準描述[34]。 MIC允許描述模型的某些所需特性，以指導模型的開發。首先，必須定義模型的接口，以描述模型的端口和交換的變量。第二，模型信息的四個部分必須填寫如下： \n \xa0 \n 對象-型號名稱，粒度級別，參考文檔 \n 對像上下文用法-時間計算，工具 \n 方法-模型尺寸，方法，線性 \n 模型質量-準確性，驗證，確認 \n \xa0 \n \xa0\xa0\xa0 這種標準化模型規範的另一用途是對現有模型的重用。實際上，對模型的特徵進行形式化可以在模型數據庫中進行搜索，並可以在不同的上下文中重用模型。 \n 3.3.3 交換和無縫集成模型的能力 \n \xa0\xa0\xa0 工業合作夥伴之間關於建立多系統仿真平台以驗證機電一體化系統的目標，主要要素是交換和集成模型的能力。目前，模型集成商傾向於迫使其供應商使用一種工具並遵循特定的建模程序（例如AP2633 [35]）。在這方面，模型供應商希望使用自己的工具對系統進行建模。因此，能夠交換和集成來自不同工具的模型將是巨大的進步。 \n \xa0\xa0\xa0 功能模型接口（FMI）計劃[36]通過提供獨立於工具的標準來交換動態模型和進行聯合仿真而朝著這個方向發展。它允許生成“中性格式”模型（以C代碼和xml1文件的形式），這些模型可以無縫集成在兼容平台中。當前，大約有70種工具支持該標準。 \n \xa0\xa0\xa0 這些標準模型交換形式的使用提供了靈活性，因為可以使用許多不同的工具來開髮用於仿真平台的組成模型。因此，模型提供者可以自由選擇和更改其首選工具，而不會影響整個仿真框架。在模型集成者方面，還可以確保靈活性，因為可以在一組可用工具中選擇和更改集成平台，而不會影響現有模型。 \n \xa0\xa0\xa0 這種類型的標準還可能替為滿足特定需求而內部開發或由工具供應商出售的工具之間的許多點對點接口。對於公司而言，這可以節省大量開發或許可成本。 \n 3.3.4 通過以下方式對機電系統進行形式驗證楷模 \n \xa0\xa0\xa0 在早期設計階段檢測系統缺陷一直是基於模型的系統工程（MBSE）的核心，以減少全球開發時間，同時提高最終產品的質量。時至今日，仿真是驗證開發中系統行為的最常用方法，但是存在一個固有的主要缺點，即有限數量的測試場景的局限性。 \n \xa0\xa0\xa0 正式的驗證技術可以證明模型確實符合其規範，即使情況是無限的。其中，模型檢查能夠以自動化過程在計算機上執行驗證。 \n \xa0\xa0\xa0 為了確保最佳的可靠性，在航空航天，鐵路，微型計算機等高科技工業領域，以及更普遍的任何關鍵嵌入式系統的開發中，模型檢查的使用已經很普遍。技術和工具已經發展起來，克服了模型檢查的某些原始限制，如今可以處理具有連續和離散零件的物理模型。這被稱為混合模型檢查，這開闢了新的應用前景，尤其是在機電一體化領域。 \n \xa0\xa0\xa0 在當前的現有技術中，混合模型檢查器通常限於證明安全屬性（即係統將永遠不會進入一組特定的狀態），因為它們經常依賴於過度逼近。例如，這使他們成為證明飛機避碰機動性正確性的良好候選人。 \n \xa0\xa0\xa0 圖3.3顯示了另一個案例，衛星的任務是根據請求捕獲地球圖像，並在可見時將其下載到地面站。目標是根據特定的地面站配置和每個軌道的最大請求數量，正式驗證衛星的存儲緩衝區不會超出。這些請求是離散的，而數據傳輸則是連續建模的。 \n \xa0 \n 圖 3.3 使用混合模型檢查驗證衛星存儲器 \n \xa0\xa0\xa0 混合模型檢查器的表達方式（例如，它們支持哪種微分方程）和它們提供的過近似方法彼此不同。 \n \xa0\xa0\xa0 當證明安全性還不夠時，混合定理證明如KeYmaera [37]可以用作機電一體化背景下的另一種形式驗證選擇。這些嘗試使所需屬性的數學證明自動化，但是通常需要用戶在演示過程中進行一些高級輸入才能得出結論，這對於復雜的系統可能非常棘手。 \n 3.3.5 優化測試活動的能力 \n \xa0\xa0\xa0 有時，由於復雜的建模偽像或可伸縮性問題，對機電一體化系統進行形式驗證是不可行的。不論是否可能，一旦構建了產品以檢查其圖3.3，就仍然需要進行測試活動。圖3.3使用混合模型驗證衛星存儲器，以檢查是否符合規格模型並根據要求對其進行驗證。無論如何，對可以執行的有限數量的測試用例的限制 \n （首先是在仿真中，然後在現實生活中）使得必須確定最相關和最具代表性的測試用例。 \n \xa0\xa0\xa0 趨勢是自動生成最佳測試用例。有兩個主要因素決定如何完成此任務：首先是測試選擇標準，該標准定義了驅動測試用例生成的因素，其次是測試生成技術，即實際產生結果的算法。兩者的典型示例在下面給出[38]。 \n \xa0 \n 測試選擇標準： \n \n 結構模型覆蓋標準-這些利用模型的結構來選擇測試用例。他們根據從控制流到代碼的思想處理整個模型的控制流。 \n 數據覆蓋標準—想法是將數據范圍分為等效類，並從每個類中選擇一位代表。通常通過邊界值分析來補充這種劃分，在邊界分析中，還額外選擇了由約束條件確定的數據范圍或邊界的臨界極限。 \n 需求覆蓋標準-旨在覆蓋所有受測非正式系統（SuT）需求。 SuT需求對系統或測試模型/代碼的可追溯性可以支持該標準的實現。幾乎所有測試方法都將其作為目標。 \n 測試用例規範-當測試工程師以某種正式符號定義測試用例規範時，這些規範可用於確定將生成哪些測試。明確決定應涵蓋哪組測試目標。 \n 隨機和隨機準則—它們大多數適用於環境模型，因為環境決定了SuT的使用模式。一種典型的方法是使用馬爾可夫鏈來指定預期的SuT使用情況配置文件。另一個示例是除了SUT的行為模型之外，還使用統計使用模型。 \n 基於故障的標準-這些標準依賴於通常會以故障模型形式設計的典型故障的知識。 \n \n \xa0 \n 測試生成技術： \n \n 隨機生成-通過採樣系統的輸入空間來完成測試的隨機生成。 \n 圖形搜索算法-專用圖形搜索算法包括節點或弧覆蓋算法，例如Chinese Postman算法2，該算法至少覆蓋每個弧一次。 \n \n \xa0 \n 圖 3.4 使用顯式測試模型（頂部）與設計 / 規格模型的基於模型的測試（底部） \n \xa0 \n \xa0 \n \n 模型檢查-模型檢查是一種用於驗證或偽造系統屬性的技術，但可用於基於給定的反例來生成測試用例。 \n 符號執行-符號執行的想法是運行一個不具有單個輸入值而是具有一組輸入值的可執行模型。這些表示為約束。通過這種做法，將生成符號跟踪。通過使用具體值實例化這些跡線，可以得出測試用例。 \n 定理證明-通常使用定理證明來檢查直接出現在模型中的公式的可滿足性。在這裡，它使用數學過程來搜索模型的可能執行路徑，從而找到測試用例和反例。 \n 在線/離線生成技術-通過在線測試生成，算法可以在測試執行期間對SuT的實際輸出做出反應。這個想法也用於實施反應性測試。脫機測試意味著測試用例在運行之前就已生成。一組測試用例僅生成一次，並且可以執行多次。 \n \n \xa0 \n \xa0\xa0\xa0 最合適的測試生成技術通常取決於要處理的源模型的類型。一些方法是根據測試模型創建測試用例的，而另一些方法則將設計模型作為輸入，如圖3.4所示。兩者都可以是行為模型，但第一種描述了測試人員對SuT進行測試的方式（即，他給出了哪些刺激以及他進行了驗證），而後者則描述了SuT的工作方式。因此，觀點（測試者與實施者）以及目標（驗證與解決方案）不同。 \n \xa0 \n \xa0 \n 3.4運營中的挑戰 \n 3.4.1 使用設計模型改善維護的能力 \n \xa0\xa0\xa0 當前，在航空航天系統的維護中很少重複使用設計模型。但是，有關係統行為的知識可用於改善診斷，預後和維護計劃。 \n \xa0\xa0\xa0 在診斷中，行為模型可用於將對系統的觀察結果與某些故障模式或組件的某些退化相關聯。由於可以檢測到系統故障的根本原因而無需檢查所有部件，因此這允許以更準確和更快的方式估計組件的當前狀態（例如，過濾器堵塞）和維護操作的性能。 \n \xa0\xa0\xa0 同樣，預測活動會嘗試預測系統的未來狀態，以便預測故障併計劃預防性維護任務。例如，通過分析由其傳感器傳輸的數據來估計系統的剩餘使用壽命，可以規劃特定的維護任務（例如，儲油箱加註），以預測所需的資源（備件）並相應地調整操作。 \n \xa0\xa0\xa0 從技術上講，使用模型進行診斷/預後通常需要狀態估計技術（例如線性回歸，卡爾曼濾波器）。這些技術允許通過播放模型的某些參數（故障，降級）來最小化實際系統和模型上的觀測值之間的誤差。以來 \n \xa0\xa0\xa0 模型的幾種配置可能與觀察到的行為相匹配，觀察到的變量的定義是有效診斷的主要驅動力。 \n \xa0\xa0\xa0 實際上，由於所需的計算資源，並非總是可以嵌入模型。但是，可以根據透射遙測（離線PHM）在地面上完成診斷/預後任務。 \n \xa0 \n 3.4.2 使用設計模型改善控制能力 \n \xa0\xa0\xa0 設計模型用於改善操作的另一種用途是將其用於系統控制。實際上，在某些情況下，有必要在系統的控制邏輯中使用行為模型中包含的知識。這稱為模型預測控制（MPC）。如果系統動力學較慢（例如化工廠）或控制系統必須考慮長期使用系統（例如計劃任務資源使用），則MPC的使用特別適合。 \n \xa0\xa0\xa0 MPC的用法示例是能源管理。例如，可以在功率控制算法中使用混合動力推進車輛的簡單模型來優化燃油消耗和給定特定任務的電池使用。與經典控制算法相比，這可以顯著提高性能。但這種智能算法的認證仍然是一個挑戰。 \n \xa0\xa0\xa0 而且，由於嵌入式模型受實時需求的限制，並且由於設計模型通常不是為此類應用程序而設計的，因此必須實現模型的簡化。這種簡化過程會在模型的實時性能和表示性之間進行權衡。 \n \xa0 \n 3.5結論 \n \xa0\xa0\xa0 從工業角度看，機電一體化系統設計中的一些主要挑戰已暴露出來。這種發展的主要動力是減少開發成本和時間，以及在成本和性能方面改進設計產品。可以看出，許多挑戰都涉及產品的虛擬化，以改善其設計，驗證或操作。實際上，虛擬化可以以較低的成本在開發的不同階段提供更大的靈活性。在設計中，組件的多樣性和特定領域，機電一體化系統需要在設計過程中將FEM和系統級模型無縫集成。為此，借助基於圖形的MDO方法，未來的工作可以集中在用於機電一體化大小調整活動和模型易於組裝的專用元模型上。在V＆V中，未來的工作應集中在機電系統的正式驗證上，因為它將大大降低認證成本。 \n \xa0 \n References \n \n Budinger M, Reysset A, Halabi TE, Vasiliu C, Mare J-C (2013) Optimal preliminary design of electromechanical actuators. Proc Inst Mech Eng Part G J Aerosp Eng 228(9):1598–1616 \n \n \xa0 \n \n Giraud X, Budinger M, Roboam X, Piquet H, Sartor M, Faucher J (2014) Methodologies \n \n for the optimal design of the integrated modular power electronics cabinet. In: European \n Conference on More Electric Aircraft \n \xa0 \n \xa0 \n \n van der Auweraer H, Anthonis J, de Bruyne S, Leuridan J (2012) Virtual engineering at work:the challenges for designing mechatronic products. Eng Comput 29(3):389–408 \n \n \xa0 \n \n Hehenberger P, Poltschak F, Zeman K, Amrhein W (2010) Hierarchical design models in \n \n the mechatronic product development process of synchronous machines. Mechatronics \n 20(8):864–875 \n \xa0 \n \n Liscouët J, Budinger M, Maré J-C, Orieux S (2011) Modelling approach for the simulation based preliminary design of power transmissions. Mech Mach Theory 46(3):276–289 \n \n \xa0 \n \n Pahl G (2007) Engineering design: a systematic approach. Springer, Berlin \n \n \xa0 \n \n Budinger M, Passieux J-C, Gogu C, Fraj A (2014) Scaling-law-based metamodels for the sizing of mechatronic systems. Mechatronics 24(7):775–787 \n \n \xa0 \n \n Sobieszczanski-Sobieski J, Haftka R (1997) Multidisciplinary aerospace design optimization:survey of recent developments. Struct Optimisation 14(1):1–23 \n \n \xa0 \n \n Dassault Systems Isight webpage www.3ds.com/productsservices/simulia/products/isight-simulia-execution-engine/latestrelease/?xtmc=isight&xtcr=1 and www.simulia.com/products/portfolio/. Accessed 10 Nov 2015 \n \n \xa0 \n \n Noesis Optimus website www.noesissolutions.com/Noesis/. Accessed 10 Nov 2015 \n \n 3 Future Challenges in Mechatronics 39 \n \xa0 \n \n Phoenix Integration ModelCenter www.phoenix-int.com. Accessed 10 Nov 2015 \n \n \xa0 \n \n Malmquist D, Frede D, Wikander J (2014) Holistic design methodology for mechatronic systems. Proc Inst Mech Eng Part I J Syst Control Eng 228(10):741–757 \n \n \xa0 \n \n Allain L (2003) Capitalisation et traitement des modèles pour la conception en génie électrique, Institut National Polytechnique de Grenoble \n \n \xa0 \n 14.Genus Designer www.solidworks.com/sw/products/details.htm?productID=2104. \n Accessed 10 Nov 2015 \n \xa0 \n \n Enventive www.enventive.com. Accessed 10 Nov 2015 \n \n \xa0 \n \n Pfennig M, Carl UB, Thielecke F (2009) Recent advances towards an integrated and optimized design of high lift actuation systems. SAE Int J Aerosp 3(1):55–64 \n \n \xa0 \n \n Dunker C, Thielecke F, Homann T (2011) New computer-aided methods for preliminary architecting and sizing of aircraft hydraulic systems, Deutscher Luft- und Raumfahrtkongress \n \n \xa0 \n \n Universal Technical Systems TKSolver www.uts.com. Accessed 10 Nov 2015 \n \n \xa0 \n \n Ascend www.ascend4.org. Accessed 10 Nov 2015 \n \n \xa0 \n \n Vesta Solutions Cades www.vesta-system.fr/en/products/vestacades/. Accessed 10 Nov 2015 \n \n \xa0 \n \n Alber R, Rudolph S (2003) ‘43’—A Generic Approach for Engineering Design Grammars. In: AAAI Spring Symposium on Computational Synthesis, AAAI Technical Report SS-03-02 \n \n \xa0 \n \n Pacelab www.pace.de. Accessed 10 Nov 2015 \n \n \xa0 \n \n Chakrabarti A (ed) (2013) Engineering design synthesis: understanding, approaches and tools. Springer Science & Business Media, Berlin \n \n \xa0 \n \n Chakrabarti A, Bligh TP (2009) An approach to functional synthesis of mechanical design concepts: theory, applications, and emerging research issues. Artif Intell Eng Des Anal Manuf 10(4):313 \n \n \xa0 \n \n Wyatt DF, Wynn DC, Jarrett JP, Clarkson PJ (2012) Supporting product architecture design using computational design synthesis with network structure constraints. Res Eng Des 23(1):17–52 \n \n \xa0 \n \n Albarello N (2012) Model-based trade studies in systems architectures design phases, Ecole Centrale Paris \n \n \xa0 \n \n Arnold A, Point G, Griffault A, Rauzy A (1999) The AltaRica formalism for describing concurrent systems. Fundam Informaticae 40(2–3):109–124 \n \n \xa0 \n \n Bouissou M, Villatte N, Bouhadana H, Bannelier M (1991) Knowledge modelling and reliability processing: presentation of the FIGARO language and associated tools, Electricite de France (EDF) \n \n \xa0 \n \n OMG SysML www.omgsysml.org. Accessed 10 Nov 2015 \n \n \xa0 \n \xa0 \n \n Helle P (2012) Automatic SysML-based safety analysis. In: Proceedings 5th International \n \n Workshop Model Based Architecting and Construction of Embedded Systems \n (ACES-MB’12), pp 19–24 \n \xa0 \n \n ITEA3 MODRIO www.itea3.org/project/modrio.html. Accessed 10 Nov 2015 \n \n \xa0 \n \n Modelica Specification 3.2 Rev. 2 www.modelica.org/news_items/release_of_modelica_3_2_ \n \n revision_2. Accessed 10 Nov 2015 \n \xa0 \n \n Bouissou M, de Bossoreille X (2015) From Modelica models to dependability analysis. \n \n IFAC-PapersOnLine 48(7):37–43 \n \xa0 \n \n Sirin G, Paredis CJJ, Yannou B, Coatanea E, Landel E (2015) A model identity card to support simulation model development process in a collaborative multidisciplinary design environment. IEEE Syst J, 1–12 \n \n \xa0 \n \n Benac C (2003) A380 simulation models. Airbus Stand Dev New Media Support Centre [OL] \n Blochwitz T, Otter M, Åkesson J (2012) Functional mockup interface 2.0: the standard for tool independent exchange of simulation models. In: 9th International Modelica Conference \n Symbolaris KeYmaera www.symbolaris.com/info/KeYmaera.html. Accessed 10 Nov 2015 \n \n \xa0 \n \n Zander J, Schieferdecker I, Mosterman PJ (2011) Model-based testing for embedded systems. CRC Press, Boca Raton \n \n', 'tags': '', 'url': 'MechaFutureAndChallenges.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}]};
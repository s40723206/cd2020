<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> <code>cmsimde</code></p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>weeks</h1>
<h2>week1~5</h2>
<p><strong>week1</strong></p>
<p><em>創建github倉儲、設定新版可攜式套件</em></p>
<p>1.創建課程倉儲並git clone到近端。</p>
<p>2.用git config 設定name、email及proxy。</p>
<p>3.用新指令 git submodule add 載下模組。</p>
<p>4.輸入 python -m pip install flask cors 指令裝 pip 套件。</p>
<p><span>5.練習開啟近端及遠端並更改網頁名稱。</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/y2TQRMlc2i0" width="560"></iframe></span></p>
<p><strong>week2</strong></p>
<p><em>將可攜系統python 3.7.3更新至python 3.8.2</em></p>
<p><span>1.先去GOOGLE找<a href="https://www.python.org/downloads/windows/">Python</a></span></p>
<p><span>2.下載<span><a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2-amd64.exe">Windows x86-64 executable installer</a> 載完點並<span>不要勾選pip選項，接著按下next選取放置資料夾</span></span></span></p>
<p><span><span><span>3.在隨身系統下新增放置資料夾cd2020，並在cd2020下新建資料夾data，data&lt;py382&lt;<span>wscite432&lt;portablegit</span></span></span></span></p>
<p><span><span><span><span>4.下載SciTE系統<span> </span><span><span><a href="https://www.scintilla.org/wscite432.zip">full 64-bit download</a></span>，下載完後解壓縮至data下的wscite432</span></span></span></span></span></p>
<p><span><span><span><span><span>5.在cd2020下建立新的start.bat及stop.bat</span></span></span></span></span></p>
<p><span style="color: #ff0000;">start.bat:</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
subst %Disk%: "data"
 
%Disk%:
 
set HomePath=%Disk%:\home_mdecourse
set HomeDrive=%Disk%:\home_mdecourse
set Home=%Disk%:\home_mdecourse
set USERPROFILE=%Disk%:\home_mdecourse
 
REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"
 
set PYTHONPATH=%Disk%:\py373\DLLs;%Disk%:\py373\Lib;%Disk%:\py373\Lib\site-packages;
set PYTHONHOME=%Disk%:\py373
 
set GIT_HOME=%Disk%:\portablegit\bin\
set GIT_SSH=%Disk%:\putty\plink.exe
 
set path_python=%Disk%:\py373;%Disk%:\py373\Scripts;
set path_msys2=%Disk%:\msys64\mingw64\bin;
REM coreutils is for compiling fossil scm
set path_coreutils=%Disk%:\coreutils-5.3.0\bin;%Disk%:\depends22_x64;
set path_tcc=%Disk%:\tcc;
set path_cmake=%Disk%:\cmake-3.10.1-win64-x64\bin;
set path_nodejs=Disk%:\nodejs;%Disk%:\nodejs\appdata\roaming\npm;
set path_git=%Disk%:\portablegit\bin;
set path_xming=%Disk%:\Xming;
set path_latex=%%Disk%:\Pandoc;%Disk%:\TinyTeX\bin\win32;
 
path=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%;
 
start /MIN %Disk%:\wscite415\wscite\SciTE.exe
start /MIN %Disk%:\wscite415\wscite\SciTE.exe
 
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
 
 
Exit</pre>
<p><span style="color: #ff0000;">stop.bat:</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
path=%PATH%;
  
taskkill /IM python.exe /F
taskkill /IM pythonw.exe /F
taskkill /IM scite.exe /F
  
REM 終止虛擬硬碟與目錄的對應
subst %Disk%: /D
REM 關閉 cmd 指令視窗
taskkill /IM cmd.exe /F
  
EXIT</pre>
<p><span>8.下</span><span>載MSYS2 </span><span><a class="button" href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20190524.exe">msys2-x86_64-20190524.exe</a></span><span> 至data</span><br/><span>9.下載</span><span>PortableGit </span><span><a href="https://github.com/git-for-windows/git/releases/download/v2.25.1.windows.1/PortableGit-2.25.1-64-bit.7z.exe">64-bit Git for Windows Portable</a></span><span> 至</span><span>portablegit<br/></span><span>10</span><span color="#000000"><span>.裝入<a href="https://bootstrap.pypa.io/get-pip.py">pip</a></span></span><span>，另存新檔到data</span><br/><span>11.測試</span><span>將python3.8.2版本，將缺少的模組下載回來</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">python get-pip.py
</pre>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">pip install flask bs4 lxml pelican markdown flask_cors leo
</pre>
<p><em>第一次線上會議</em></p>
<p>一.成員簽到</p>
<p>40723201 (簽) 已建立完成網站 <br/>40723206 (簽) 已建立完成網站 <span style="color: #ff0000;">小組長</span> <br/>40723213 (簽) 已建立完成網站 <br/>40723216 (簽) 已建立完成網站 <br/>40723223 (簽) <br/>40723226 (簽) 已建立完成網站 <br/>40723229 (簽) 已建立完成網站 <span style="color: #ff0000;">小組長</span> <br/>40723230 (簽) 已建立完成網站 <br/>40723241 (簽) 已建立完成網站 <br/>40723242 (簽) 已建立完成網站 <span style="color: #ff0000;">小組長</span> <br/>40723246 (<span style="color: #0000ff;">group leader</span>) (簽) 已建立完成網站 <br/>40732319 (簽)</p>
<p>二.討論日後分工</p>
<p>1.由(40723201、40723206、40723230、40723241、40723246)，已經建立<br/>好網站及編輯完網站的同學，前去協助還沒完成的同學 <br/> <br/>2.40723213、40723242 督處尚未完成的同學，互相協助來完成第一周課程 <br/> <br/>3.40723223、40723223 負責處理小組會議 <br/> <br/>4.40723246 負責製作小組會議 <br/> <br/>5.40723241、40723216 提醒小組問題及完成分組作業</p>
<p>三.有問題的同學提出問題 </p>
<p></p>
<p><strong>組員會議中提醒的事項</strong> <br/> <br/>1.網站的格式及編譯 <br/> <br/>2.其餘的工作分配 <br/> <br/>3.PDF 放倉儲的位置及如何放置<strong> </strong></p>
<p><b>分工表</b></p>
<p><b><img alt="" height="415" src="/images/001.png" width="405"/></b></p>
<p><strong></strong></p>
<p><strong>week3</strong></p>
<p>上週我被分派為小組長，我帶領的組員是40723213、40723216、40723241，我們被分派做的部分是<strong>研究並探討四輪車的模擬</strong>，因為我是小組長所以我分配成<strong><a href="https://www.coppeliarobotics.com/helpFiles/en/bubbleRobTutorial.htm">BubbleRob tutorial</a>、<a href="https://www.coppeliarobotics.com/helpFiles/en/lineFollowingBubbleRobTutorial.htm">Line following BubbleRob tutorial</a>、<a href="https://www.coppeliarobotics.com/helpFiles/en/externalControllerTutorial.htm">External controller</a><a href="https://www.coppeliarobotics.com/helpFiles/en/externalControllerTutorial.htm"> tutorial</a>、<a href="https://www.coppeliarobotics.com/helpFiles/en/simulation.htm">Simulation</a> </strong>四個部分，每一個人分別研究一部份。</p>
<p><em>Four Wheel Car-</em>Analysis and integration</p>
<p><span style="color: #33cccc;">此部分由40723206提供</span></p>
<p><span style="color: #ff0000;"><a href="https://www.coppeliarobotics.com/helpFiles/index.html">BubbleRob tutorial</a>:</span></p>
<p>在此教程中會讓我們設計簡單的BubbleRob機器人並進行一些基礎的模擬操作，而大二上我們其實就有實際的以v-rep操作過這個教程，在這個教程中的說明包括了如何建造模型機器人主體、車輪及後方支撐滑塊，還有如何建造及設置障礙物，以及設定好的距離傳感器後使其去感測並避開我們所設置的障礙物，而最重要的要點是如何去設計指令讓傳動器依照我們所想要的方式去做動，且當距離感測器偵測到障礙物時才能使機器人迅速閃避障礙物，另外還有視覺辨識器，使機器人在移動時，讓我們能夠觀測到機器人行徑方向之路況。</p>
<p>week4</p>
<p>week5</p>
<h2>week6~9</h2>
<h2>week10~14</h2>
<h2>week15~18</h2>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<p><code></code></p>